{"title":"java概述","uid":"ac1892c7e69c5d72eb21bb4d76af07c9","slug":"java概述","date":"2023-08-31T10:07:29.000Z","updated":"2023-09-07T09:51:06.822Z","comments":true,"path":"api/articles/java概述.json","keywords":null,"cover":[],"content":"<h2 id=\"JAVA\"><a href=\"#JAVA\" class=\"headerlink\" title=\"JAVA\"></a>JAVA</h2><p><img src=\"https://pic.imgdb.cn/item/64f489a2661c6c8e5417629e.png\" alt=\"\"></p>\n<p><strong>Java</strong> 技术的多功能性、有效性、平台的可移植性以及安全性已经使它成为网络计算领域最完美的技术。</p>\n<span id=\"more\"></span>\n<h2 id=\"JAVA语言特点\"><a href=\"#JAVA语言特点\" class=\"headerlink\" title=\"JAVA语言特点\"></a>JAVA语言特点</h2><h3 id=\"平台无关性\"><a href=\"#平台无关性\" class=\"headerlink\" title=\"平台无关性\"></a>平台无关性</h3><ul>\n<li><p>编译器所生成的可执行代码是基于抽象处理器─Java虚拟机(JVM：Java Virtual Machine)来实现。</p>\n</li>\n<li><p>Java虚拟机就是虚拟运行Java代码的假想计算机，其定义为：运行经过编译的Java目标代码的计算机的实现。</p>\n</li>\n<li><p>编译生成的代码不针对任何具体的硬件体系结构和软件平台的代码—“字节码”。</p>\n</li>\n</ul>\n<h3 id=\"简洁性\"><a href=\"#简洁性\" class=\"headerlink\" title=\"简洁性\"></a>简洁性</h3><ul>\n<li>由C++衍生而来，其语言风格与C++类似，但进行了很大的简化和改进。</li>\n<li>抛弃了C++中一些不是绝对必要的东西，如头文件、指针、结构、联合、隐式的类型转换和操作符重载等。</li>\n<li>java支持单重继承，接口（interface）实现多继承，没有多继承混乱、复杂的问题。</li>\n</ul>\n<h3 id=\"安全性\"><a href=\"#安全性\" class=\"headerlink\" title=\"安全性\"></a>安全性</h3><ul>\n<li>对内存访问是通过对象实例变量实现的，防止在网络系统或分布系统环境下特洛伊木马等手段访问对象的私有成员。</li>\n<li>不支持指针，避免指针的安全隐患。</li>\n<li>Java语言提供的内存管理机制,有自动搜集“内存垃圾”程序。</li>\n</ul>\n<h3 id=\"动态性\"><a href=\"#动态性\" class=\"headerlink\" title=\"动态性\"></a>动态性</h3><ul>\n<li>分布式系统中动态地维护应用程序和对支持类库间一致性，就可避免像类库升级问题。</li>\n<li>在类库中可以自由地加入新的方法和实例变量而不会影响用户程序的执行。</li>\n</ul>\n<h3 id=\"高性能\"><a href=\"#高性能\" class=\"headerlink\" title=\"高性能\"></a>高性能</h3><ul>\n<li>Java字节码格式设计中充分考虑到它的机器码执行效率，很容易直接转换成对应于特定处理器的高性能机器码。</li>\n</ul>\n<h3 id=\"多线程\"><a href=\"#多线程\" class=\"headerlink\" title=\"多线程\"></a>多线程</h3><ul>\n<li>自身的多线程利用系统的空闲执行一些常规处理等。</li>\n<li>提供对多线程的语言级支持，提高程序执行效率。</li>\n</ul>\n<h3 id=\"分布式\"><a href=\"#分布式\" class=\"headerlink\" title=\"分布式\"></a>分布式</h3><ul>\n<li>Java是一个适用于网络的语言，它的设计使分布式计算变得容易起来。</li>\n<li>提供的类库支持对TCP/IP协议处理，可以通过URL地址访问网络上其它的对象。</li>\n<li>Java支持WWW的C/S和B/S的计算机网络模型，它可以支持分布式的数据分布和操作分布。</li>\n</ul>\n<h3 id=\"面向对象（OOP，Object-Oriented-Programming）\"><a href=\"#面向对象（OOP，Object-Oriented-Programming）\" class=\"headerlink\" title=\"面向对象（OOP，Object Oriented Programming）\"></a>面向对象（OOP，Object Oriented Programming）</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p> 计算机程序是由单个能够起到子程序作用的单元或对象组合而成。</p></blockquote>\n<p><img src=\"https://pic.imgdb.cn/item/64f489a2661c6c8e541762ab.png\" alt=\"面向对象\"></p>\n<p>比如一辆车就可以表示为对象：</p>\n<pre><code>class Car &#123;\n    int color;  \n    int number;\n    int speed;\n\n    void brake() &#123; … &#125;\n    void speedUp() &#123;…&#125;;\n    void slowDown() &#123; …  &#125;\n&#125;\n</code></pre><ul>\n<li>类是Java语言的最基本概念，是组成Java程序的基本要素</li>\n<li>类是Java的执行单位，Java运行的就是Java类本身类封装了该类对象的变量和方法</li>\n<li>对象是类的实例化，对象的创建是通过对象构造方法来实现的</li>\n<li>我们可以生成多个对象，通过消息传递来进行交互，最终完成复杂的任务</li>\n</ul>\n<p>Java语言具有真正的面向对象语言的特点，除了数值、布尔和字符三种基本的数据类型外，其它类型都是对象，支持封装、多态和继承。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><ul>\n<li>封装就是将对象内的数据和代码联编起来，形成一个对象;</li>\n<li>多态性是指一个接口，有多个内在实现形式表示;</li>\n<li>继承是指某一对象直接使用另一对象的所有属性和方法的过程,</li>\n</ul></blockquote>\n<h2 id=\"Java程序基本结构\"><a href=\"#Java程序基本结构\" class=\"headerlink\" title=\"Java程序基本结构\"></a>Java程序基本结构</h2><ul>\n<li>Java源程序是以<code>.java</code>为扩展名的文件</li>\n<li>这些文件就是Java编译器javac的编译单元，组成为：<ul>\n<li>最多有一条package语句</li>\n<li>任意条import语句</li>\n<li>至少有一个类class声明或接口interface声明构成</li>\n</ul>\n</li>\n</ul>\n<pre><code>// 源程序：&lt;name&gt;.java\npackage &lt;packagename&gt;;\nimport &lt;otherClassName&gt;;\nclass ClassName &#123;\npublic static void main (string args[]) &#123;\n    /*code*/\n    &#125;\n&#125;\n</code></pre><h2 id=\"Java程序类型\"><a href=\"#Java程序类型\" class=\"headerlink\" title=\"Java程序类型\"></a>Java程序类型</h2><h3 id=\"Application：Java应用程序\"><a href=\"#Application：Java应用程序\" class=\"headerlink\" title=\"Application：Java应用程序\"></a><code>Application</code>：Java应用程序</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>由Java解释器控制执行的，它可以在任何装有JVM的计算机上运行。</p></blockquote>\n<p><img src=\"https://pic.imgdb.cn/item/64f489a2661c6c8e541762bc.png\" alt=\"\"></p>\n<p>Application是可独立运行的Java程序，它由一个或多个类组成,其中必须有一个类中定义了<code>main()</code>方法，<code>main()</code>方法是Application运行的起始点<br>实现Application编程需要三个步骤:</p>\n<ul>\n<li><p>使用字符编辑器上输入并保存Java源程序代码;</p>\n</li>\n<li><p>使用编译器javac对源程序(.java)进行编译，生成对应的字节代码程序(.class);</p>\n</li>\n<li>使用解释器java对Java字节码程序(.class)解释执行。</li>\n</ul>\n<h3 id=\"applet：java小应用程序\"><a href=\"#applet：java小应用程序\" class=\"headerlink\" title=\"applet：java小应用程序\"></a><code>applet</code>：java小应用程序</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>嵌入到Web页面中，由Java兼容浏览器控制执行<br>是一种“寄生”运行方式，它要依赖HTML文件以及Web浏览器。</p></blockquote>\n<p>Applet程序是在Java兼容浏览器上执行。<br>实现Applet编程需要四步：</p>\n<ul>\n<li>前两步同Application:&gt;使用字符编辑器上输入并保存Java源程序代码</li>\n<li>使用编译器javac对源程序(.java)进行编译，生成对应的字节代码程序(.class)</li>\n<li>将Applet的字节码嵌入到HTML文件中</li>\n<li>使用Web浏览器(支持Java)或appletviewer观察器来对Java字节码程序(.class)解释执行</li>\n</ul>\n<p><img src=\"https://pic.imgdb.cn/item/64f489a2661c6c8e541762d4.png\" alt=\"\"></p>\n<h3 id=\"Application-amp-Applet\"><a href=\"#Application-amp-Applet\" class=\"headerlink\" title=\"Application&amp;Applet\"></a>Application&amp;Applet</h3><p><img src=\"https://pic.imgdb.cn/item/64f489a3661c6c8e541762fb.png\" alt=\"\"></p>\n<ul>\n<li><p><strong>运行方式不同</strong></p>\n<p>Java Applet程序不能单独运行，它必须依附于一个用HTML语言编写的网页并嵌入其中</p>\n</li>\n<li><p><strong>运行工具不同</strong><br>Java Application程序被编译以后，用普通的Java解释器就可以使其边解释边执行，而Java Applet必须通过网络浏览器或者Applet观察器才能执行程序</p>\n</li>\n<li><p><strong>结构不同</strong><br>每个Java Application程序必定含有一个并且只有一个main方法;Applet没有含main方法的主类</p>\n</li>\n<li><p><strong>受到的限制不同</strong><br>Java Application程序可以设计成能进行各种操作的程序，包括读/写文件的操作</p>\n</li>\n</ul>\n<h2 id=\"Java虚拟机\"><a href=\"#Java虚拟机\" class=\"headerlink\" title=\"Java虚拟机\"></a>Java虚拟机</h2><p>解释器在JVM字节码运行中，分三个阶段:</p>\n<ul>\n<li><p>代码的装入，是由类装载器(class loader)完成</p>\n</li>\n<li><p>代码的校验，用于发现各种可能出现的错误</p>\n</li>\n<li><p>代码的运行，在代码校验后就可以执行</p>\n</li>\n</ul>\n<p>代码的运行有两种执行方式：</p>\n<ul>\n<li><p>即时编译方式:由代码生成器先将字节码转换成机器码，再全速执行该机器码</p>\n</li>\n<li><p>解释执行方式:由解释器通过每次翻译并执行一小段代码来完成字节码程序的所有操作。</p>\n<p><img src=\"https://pic.imgdb.cn/item/64f489eb661c6c8e54177350.png\" alt=\"PS请勿使用夜间模式看这张图\"></p>\n</li>\n</ul>\n<p><img src=\"https://pic.imgdb.cn/item/64f489eb661c6c8e54177344.png\" alt=\"\"></p>\n","text":"JAVA Java 技术的多功能性、有效性、平台的可移植性以及安全性已经使它成为网络计算领域最完美的技术。 JAVA语言特点平台无关性 编译器所生成的可执行代码...","permalink":"/post/java概述","photos":[],"count_time":{"symbolsCount":"2.7k","symbolsTime":"2 mins."},"categories":[{"name":"编程","slug":"编程","count":8,"path":"api/categories/编程.json"},{"name":"java","slug":"编程/java","count":6,"path":"api/categories/编程/java.json"}],"tags":[{"name":"java","slug":"java","count":4,"path":"api/tags/java.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#JAVA\"><span class=\"toc-text\">JAVA</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#JAVA%E8%AF%AD%E8%A8%80%E7%89%B9%E7%82%B9\"><span class=\"toc-text\">JAVA语言特点</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%B9%B3%E5%8F%B0%E6%97%A0%E5%85%B3%E6%80%A7\"><span class=\"toc-text\">平台无关性</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%AE%80%E6%B4%81%E6%80%A7\"><span class=\"toc-text\">简洁性</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AE%89%E5%85%A8%E6%80%A7\"><span class=\"toc-text\">安全性</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8A%A8%E6%80%81%E6%80%A7\"><span class=\"toc-text\">动态性</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%AB%98%E6%80%A7%E8%83%BD\"><span class=\"toc-text\">高性能</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%A4%9A%E7%BA%BF%E7%A8%8B\"><span class=\"toc-text\">多线程</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%88%86%E5%B8%83%E5%BC%8F\"><span class=\"toc-text\">分布式</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%EF%BC%88OOP%EF%BC%8CObject-Oriented-Programming%EF%BC%89\"><span class=\"toc-text\">面向对象（OOP，Object Oriented Programming）</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Java%E7%A8%8B%E5%BA%8F%E5%9F%BA%E6%9C%AC%E7%BB%93%E6%9E%84\"><span class=\"toc-text\">Java程序基本结构</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Java%E7%A8%8B%E5%BA%8F%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">Java程序类型</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Application%EF%BC%9AJava%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F\"><span class=\"toc-text\">Application：Java应用程序</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#applet%EF%BC%9Ajava%E5%B0%8F%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F\"><span class=\"toc-text\">applet：java小应用程序</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Application-amp-Applet\"><span class=\"toc-text\">Application&amp;Applet</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Java%E8%99%9A%E6%8B%9F%E6%9C%BA\"><span class=\"toc-text\">Java虚拟机</span></a></li></ol>","author":{"name":"C4IN","slug":"blog-author","avatar":"/pic/au.jpg","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"java语言基础","uid":"a8aa18bf0cb5c42542c071a3bedb754a","slug":"java语言基础","date":"2023-09-01T02:01:41.000Z","updated":"2023-09-08T04:02:13.515Z","comments":true,"path":"api/articles/java语言基础.json","keywords":null,"cover":[],"text":"我超，java Java程序的基本结构Java语言的源程序是一个或多个以.java为扩展名的文件，Java源程序中可包含三个基本部分: 一个包声明package...","permalink":"/post/java语言基础","photos":[],"count_time":{"symbolsCount":"7.5k","symbolsTime":"7 mins."},"categories":[{"name":"编程","slug":"编程","count":8,"path":"api/categories/编程.json"},{"name":"java","slug":"编程/java","count":6,"path":"api/categories/编程/java.json"}],"tags":[{"name":"java","slug":"java","count":4,"path":"api/tags/java.json"}],"author":{"name":"C4IN","slug":"blog-author","avatar":"/pic/au.jpg","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"多方安全计算介绍","uid":"02610888fe553149eda2045d277295dd","slug":"多方安全计算基础","date":"2023-08-20T02:47:19.000Z","updated":"2023-09-17T13:19:58.186Z","comments":true,"path":"api/articles/多方安全计算基础.json","keywords":null,"cover":[],"text":"多方安全计算安全多方计算(MPC)已经从20世纪80年代的一种理论发展成为今天构建真实系统的工具。在过去的十年中，MPC已经成为理论和应用密码学中最活跃的研究领...","permalink":"/post/多方安全计算基础","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[{"name":"Crypto","slug":"Crypto","count":2,"path":"api/categories/Crypto.json"},{"name":"多方安全计算","slug":"Crypto/多方安全计算","count":2,"path":"api/categories/Crypto/多方安全计算.json"}],"tags":[{"name":"Crypto","slug":"Crypto","count":2,"path":"api/tags/Crypto.json"},{"name":"MPC","slug":"MPC","count":1,"path":"api/tags/MPC.json"}],"author":{"name":"C4IN","slug":"blog-author","avatar":"/pic/au.jpg","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}