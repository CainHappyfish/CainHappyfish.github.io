{"title":"matlab基础入门","uid":"cb09ea597c4ce0f4355fa56a3ee4d067","slug":"matlab基础入门","date":"2023-09-11T00:56:02.000Z","updated":"2023-09-16T02:56:07.890Z","comments":true,"path":"api/articles/matlab基础入门.json","keywords":null,"cover":null,"content":"<h2 id=\"matlab基础入门\"><a href=\"#matlab基础入门\" class=\"headerlink\" title=\"matlab基础入门\"></a>matlab基础入门</h2><p>学数值计算学的（悲</p>\n<p>使用的是 MATLAB R2016a 版本。</p>\n<span id=\"more\"></span>\n<h2 id=\"矩阵和数组\"><a href=\"#矩阵和数组\" class=\"headerlink\" title=\"矩阵和数组\"></a>矩阵和数组</h2><p>矩阵运算是 MATLAB 最厉害的部分，其主要用于处理<strong>整个</strong>的矩阵和数组。所有 MATLAB 变量都是多维<em>数组</em>，与数据类型无关。<em>矩阵</em>是指通常用来进行线性代数运算的二维数组。</p>\n<h3 id=\"创建\"><a href=\"#创建\" class=\"headerlink\" title=\"创建\"></a>创建</h3><p>创建时同一行（<strong>行向量</strong>）的元素之间用<code>,</code>或者空格隔开：</p>\n<pre><code>test = [1 2 3 4]\n</code></pre><p>输出：</p>\n<pre><code>&gt;&gt; test = [1 2 3 4]\n\ntest =\n\n     1     2     3     4\n</code></pre><p>创建矩阵时行与行之间用<code>;</code>隔开：</p>\n<pre><code>test = [1,2,3; 4,5,6; 7,8,9]\n</code></pre><p>输出：</p>\n<pre><code>&gt;&gt; test = [1,2,3; 4,5,6; 7,8,9]\n\ntest =\n\n     1     2     3\n     4     5     6\n     7     8     9\n</code></pre><p>还可以用<code>ones, zeros, rand</code>等函数创建矩阵：</p>\n<pre><code>z = zeros(5,1)\n</code></pre><p>这将创建一个由0组成的列向量：</p>\n<pre><code>&gt;&gt; z = zeros(5,1)\n\nz =\n\n     0\n     0\n     0\n     0\n     0\n</code></pre><p>其他函数的用法请查阅官方文档。</p>\n<h3 id=\"运算\"><a href=\"#运算\" class=\"headerlink\" title=\"运算\"></a>运算</h3><p>对已定义的矩阵进行单一运算符的运算将处理矩阵中的所有值：</p>\n<pre><code>test + 10      % test和上面的一样\n</code></pre><p>输出</p>\n<pre><code>&gt;&gt; test + 10\n\nans =\n\n    11    12    13\n    14    15    16\n    17    18    19\n</code></pre><p>使用单引号<code>‘</code>’转置矩阵：</p>\n<pre><code>test&#39;\n</code></pre><p>输出：</p>\n<pre><code>&gt;&gt; test&#39;\n\nans =\n\n     1     4     7\n     2     5     8\n     3     6     9\n</code></pre><p>可以用<code>*</code>运算符进行标准矩阵乘法，这将计算行与列之间的内积。例如$A\\cdot A^{-1}=I$：</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><code>inv()</code>矩阵求逆函数</p></blockquote>\n<pre><code>test*inv(test)\n</code></pre><p>输出：</p>\n<pre><code>\n&gt;&gt; test = [1,2,7; 3,4,8; 5,6,10]\n\ntest =\n\n     1     2     7\n     3     4     8\n     5     6    10\n\n&gt;&gt; p = test * inv(test)\n\np =\n\n    1.0000   -0.0000    0.0000\n   -0.0000    1.0000    0.0000\n    0.0000   -0.0000    1.0000\n</code></pre><blockquote>\n<p>请注意，p不是整数值矩阵，MATLAB将数字存储为浮点值，算术运算可以区分实际值与其浮点表示之间的细微差别。使用format命令可以显示更多小数位数：</p>\n<pre><code>format long\n</code></pre><p>输出</p>\n<pre><code>&gt;&gt; format long\n&gt;&gt; test * inv(test)\n\nans =\n\n   1.000000000000000  -0.000000000000003   0.000000000000002\n  -0.000000000000002   1.000000000000000   0.000000000000004\n   0.000000000000002  -0.000000000000012   1.000000000000004\n</code></pre></blockquote>\n","text":"matlab基础入门学数值计算学的（悲 使用的是 MATLAB R2016a 版本。 矩阵和数组矩阵运算是 MATLAB 最厉害的部分，其主要用于处理整个的矩阵...","permalink":"/post/matlab基础入门","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[{"name":"编程","slug":"编程","count":8,"path":"api/categories/编程.json"},{"name":"matlab","slug":"编程/matlab","count":1,"path":"api/categories/编程/matlab.json"}],"tags":[],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#matlab%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8\"><span class=\"toc-text\">matlab基础入门</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%9F%A9%E9%98%B5%E5%92%8C%E6%95%B0%E7%BB%84\"><span class=\"toc-text\">矩阵和数组</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%88%9B%E5%BB%BA\"><span class=\"toc-text\">创建</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%BF%90%E7%AE%97\"><span class=\"toc-text\">运算</span></a></li></ol></li></ol>","author":{"name":"C4IN","slug":"blog-author","avatar":"/pic/au.jpg","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"MASCOT前置知识（一）","uid":"67a2e1ac4586a101302bb0a481c51db5","slug":"MASCOT前置知识","date":"2023-09-16T05:30:58.000Z","updated":"2023-09-17T13:21:33.591Z","comments":true,"path":"api/articles/MASCOT前置知识.json","keywords":null,"cover":[],"text":"这几天开始看MASCOT，先学学里面提到的一些基础知识。 通用哈希函数(Universal Hash Function)通用哈希函数是指从具有一定数学特性的散列...","permalink":"/post/MASCOT前置知识","photos":[],"count_time":{"symbolsCount":778,"symbolsTime":"1 mins."},"categories":[{"name":"Crypto","slug":"Crypto","count":2,"path":"api/categories/Crypto.json"},{"name":"多方安全计算","slug":"Crypto/多方安全计算","count":2,"path":"api/categories/Crypto/多方安全计算.json"},{"name":"MASCOT","slug":"Crypto/多方安全计算/MASCOT","count":1,"path":"api/categories/Crypto/多方安全计算/MASCOT.json"}],"tags":[{"name":"Crypto","slug":"Crypto","count":2,"path":"api/tags/Crypto.json"},{"name":"Basic","slug":"Basic","count":1,"path":"api/tags/Basic.json"}],"author":{"name":"C4IN","slug":"blog-author","avatar":"/pic/au.jpg","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"Java类和对象","uid":"e8805eec5bdd2acbc81f5c8e275b0c0a","slug":"Java类和对象","date":"2023-09-05T06:23:22.000Z","updated":"2023-09-17T11:28:30.204Z","comments":true,"path":"api/articles/Java类和对象.json","keywords":null,"cover":[],"text":"Java类和对象类的变量描述对象的属性，类的方法体现对象的行为。封装在类中的这些数据的变量和方法，为对象的创建提供了模板。对象之间的交互作用是通过对象的消息机制...","permalink":"/post/Java类和对象","photos":[],"count_time":{"symbolsCount":"3.9k","symbolsTime":"4 mins."},"categories":[{"name":"编程","slug":"编程","count":8,"path":"api/categories/编程.json"},{"name":"java","slug":"编程/java","count":6,"path":"api/categories/编程/java.json"}],"tags":[],"author":{"name":"C4IN","slug":"blog-author","avatar":"/pic/au.jpg","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}