{"title":"中断","uid":"87122f1313843578dbea5a21e7a0d4c1","slug":"中断","date":"2023-12-12T01:23:45.000Z","updated":"2023-12-12T07:14:00.780Z","comments":true,"path":"api/articles/中断.json","keywords":null,"cover":[],"content":"<h1 id=\"中断方式及接口\"><a href=\"#中断方式及接口\" class=\"headerlink\" title=\"中断方式及接口\"></a>中断方式及接口</h1><p><strong>中断</strong>：CPU暂时中止现行程序的执行，转去执行为某个随机事态服务的中断处理程序。处理完毕后自动恢复原程序的执行。</p>\n<ul>\n<li><p>实质：</p>\n<p>程序切换。</p>\n<p>方法：</p>\n<ul>\n<li>保存断点，保护现场（中断处理前）</li>\n<li>恢复现场，返回断点（中断处理后）</li>\n</ul>\n<p>时间：</p>\n<ul>\n<li>一条指令结束时切换</li>\n<li>保证程序的完整性。</li>\n</ul>\n</li>\n<li><p>特点：随机性</p>\n<ul>\n<li>随机发生的事态（按键、故障）</li>\n<li>有意调用，随机请求与处理的事态（调用打印机）</li>\n<li>随机插入的事态（软中断指令插入程序任何位置）</li>\n</ul>\n</li>\n</ul>\n<p>注意中断与转子的区别：</p>\n<ul>\n<li>转子子程序的执行是由程序员<strong>事先安排</strong>好的，而中断服务程序的执行则是由<strong>随机的中断事件引起的调用</strong>。</li>\n<li>转子子程序的执行<strong>受到主程序或上层子程序的控制</strong>，而中断服务程序一般与被中断的现行程序<strong>没有关系</strong>。 </li>\n<li>不存在同时调用多个转子子程序的情况，而可能发生多个外设同时请求CPU为自己服务的情况。</li>\n</ul>\n<p><strong>分类</strong></p>\n<ul>\n<li>硬件中断与软中断<ul>\n<li>硬件中断：由硬件请求信号引发中断</li>\n<li>软中断：由软中断指令引发中断</li>\n</ul>\n</li>\n<li>内中断与外中断<ul>\n<li>内中断：中断源来自主机内部</li>\n<li>外中断：中断源来自主机外部</li>\n</ul>\n</li>\n<li>可屏蔽中断与非屏蔽中断<ul>\n<li>可屏蔽中断：可通过屏蔽字屏蔽该类请求；关中断时不响应该类请求。</li>\n<li>非屏蔽中断：该类请求与屏蔽字无关；请求的响应与开/关中断无关。</li>\n</ul>\n</li>\n<li>向量中断与非向量中断<ul>\n<li>向量中断：由硬件提供服务程序入口地址。</li>\n<li>非向量中断：由软件提供服务程序入口地址</li>\n</ul>\n</li>\n</ul>\n<p><strong>典型应用</strong></p>\n<ul>\n<li><p>管理中低速I/O操作</p>\n</li>\n<li><p>处理故障</p>\n</li>\n<li><p>实时处理</p>\n<p>某事件出现的实际时间内及时处理，不是批量处理；</p>\n<p>利用时钟中断定时采集参数，检测，调节。</p>\n</li>\n<li><p>人机对话</p>\n</li>\n<li><p>多机通信</p>\n</li>\n</ul>\n<p><strong>终端系统的硬、软件组织</strong></p>\n<p>硬件：I/O接口</p>\n<p>软件：中断请求源，中断服务程序，中断向量表</p>\n<ul>\n<li><p>中断请求源</p>\n<ul>\n<li>外部硬件中断源：8种，IREQ0—IREQ7</li>\n<li>内部硬件中断源：掉电、溢出、校验错中断等</li>\n<li>软中断：模型机软中断为INT11—INTn</li>\n</ul>\n</li>\n<li><p>中断服务程序</p>\n<p>在主存种的空间不必连续</p>\n</li>\n<li><p>中断向量表</p>\n<ul>\n<li>存放在模型机中的空间不必连续</li>\n<li>向量地址=中断号+2</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"中断全过程\"><a href=\"#中断全过程\" class=\"headerlink\" title=\"中断全过程\"></a>中断全过程</h2><h3 id=\"中断请求的产生\"><a href=\"#中断请求的产生\" class=\"headerlink\" title=\"中断请求的产生\"></a><strong>中断请求的产生</strong></h3><ul>\n<li>外设工作完成：<strong>完成</strong>标志为1</li>\n<li>CPU允许请求：<strong>屏蔽</strong>标志位为0</li>\n</ul>\n<p><img src=\"https://pic.imgdb.cn/item/6577bbd9c458853aef63665f.jpg\" alt=\"\"></p>\n<h3 id=\"中断请求的传送\"><a href=\"#中断请求的传送\" class=\"headerlink\" title=\"中断请求的传送\"></a><strong>中断请求的传送</strong></h3><ul>\n<li><p>使用单独请求线</p>\n<p><img src=\"https://pic.imgdb.cn/item/6577bc19c458853aef642b2e.jpg\" alt=\"\"></p>\n</li>\n<li><p>使用公共请求线</p>\n<p><img src=\"https://pic.imgdb.cn/item/6577bc92c458853aef65b198.jpg\" alt=\"\"></p>\n</li>\n<li><p>混合传送方式</p>\n<p><img src=\"https://pic.imgdb.cn/item/6577bc41c458853aef64b05b.jpg\" alt=\"\"></p>\n</li>\n</ul>\n<h3 id=\"中断请求优先级判断\"><a href=\"#中断请求优先级判断\" class=\"headerlink\" title=\"中断请求优先级判断\"></a>中断请求优先级判断</h3><ul>\n<li><p>优先顺序：<strong>故障、内中断、DMA、外中断</strong></p>\n</li>\n<li><p>基本原则：高速操作优于低速操作，输入优于输出</p>\n</li>\n<li><p>CPU现行程序与外设请求的判优</p>\n<ul>\n<li><p>CPU设置允许中断标志，1为开中断，0为关中断（模型机）</p>\n</li>\n<li><p>CPU设置程序状态字的优先级字段</p>\n<p>为<strong>现行程序</strong>赋予优先级：</p>\n<ul>\n<li><strong>小于</strong>外设请求优先级，响应</li>\n<li><strong>大于等于</strong>外设请求优先级，不响应</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"外设请求的判优方法\"><a href=\"#外设请求的判优方法\" class=\"headerlink\" title=\"外设请求的判优方法\"></a>外设请求的判优方法</h3><ul>\n<li><p>软件判优：由<strong>查询顺序</strong>（程序）确定优先级</p>\n<p><img src=\"https://pic.imgdb.cn/item/6577be23c458853aef6a9879.jpg\" alt=\"\"></p>\n</li>\n<li><p>硬件判优</p>\n<ul>\n<li><p>一种采用独立请求线的并行判优逻辑</p>\n<p><img src=\"https://pic.imgdb.cn/item/6577bec3c458853aef6ca04b.jpg\" alt=\"\"></p>\n</li>\n<li><p>链式优先权判优逻辑</p>\n<p><img src=\"https://pic.imgdb.cn/item/6577bef1c458853aef6d23f7.jpg\" alt=\"\"></p>\n</li>\n<li><p><strong>专用芯片硬件判优——中断控制器(8259)</strong></p>\n<p>集中解决请求信号的接收、屏蔽、判优、编码等问题</p>\n<p><img src=\"https://pic.imgdb.cn/item/6577bfb7c458853aef6f6750.jpg\" alt=\"\"></p>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"中断响应\"><a href=\"#中断响应\" class=\"headerlink\" title=\"中断响应\"></a>中断响应</h3><ul>\n<li><p>响应条件</p>\n<ul>\n<li>外设有请求，且未被屏蔽</li>\n<li>CPU开中断</li>\n<li>中断源优先级<strong>高于</strong>当前程序的优先级</li>\n<li>一条指令（非停机）结束，即<strong>ET</strong>之后</li>\n</ul>\n</li>\n<li><p>进入中断周期</p>\n<p>安排一个过渡周期，位于主程序与中断服务程序之间，为转到中断服务程序做准备。</p>\n</li>\n<li><p>响应过程（硬件自动完成）</p>\n<p>例如向量中断方式（单级中断）为例：</p>\n<p><img src=\"https://pic.imgdb.cn/item/6577c0c5c458853aef727c7e.jpg\" alt=\"\"></p>\n</li>\n</ul>\n<p>中断周期IT（过渡周期依靠硬件实现）</p>\n<p><img src=\"https://pic.imgdb.cn/item/6577c1f7c458853aef763d12.jpg\" alt=\"\"></p>\n<p>其中PC记录了断点内容。</p>\n<h2 id=\"优先权逻辑与屏蔽技术\"><a href=\"#优先权逻辑与屏蔽技术\" class=\"headerlink\" title=\"*优先权逻辑与屏蔽技术\"></a><em>*</em>优先权逻辑与屏蔽技术</h2><p><img src=\"https://pic.imgdb.cn/item/6577cc3dc458853aef97f425.jpg\" alt=\"\"></p>\n<p>顺序是：</p>\n<p>中断请求$\\rightarrow$8259（未屏蔽的请求判优，生成相应中断号）$\\rightarrow$公共请求INT$\\rightarrow$CPU</p>\n<p><strong>IRR 中断请求寄存器(Interrupt Request Register)</strong>：8位，可存放8个中断请求信号，作为向CPU申请与判优、编码的依据。接收到外部的中断请求后自动将对应标志位设置成1。</p>\n<p><strong>PR 优先级裁决器(Priority Resolver)</strong>：即中断源的优先级排队逻辑，选择优先级最高的中断申请者。有两种优先级裁决规则：</p>\n<ul>\n<li><strong>固定优先级</strong>：$IRQ_0&gt;\\cdots&gt;IRQ_7$</li>\n<li>循环优先级</li>\n</ul>\n<p><strong>ISR 中断服务寄存器(Interrupt Service Register)</strong>：8位，用来存放或记录正在服务中的所有中断请求优先级（如在多重嵌套时），<strong>每一位对应一个中断优先级</strong>。</p>\n<p><strong>IMR 中断屏蔽寄存器(Interrupt Mask Register)</strong>：8位，其内容可由CPU预置。这就是前面提到的集中屏蔽方式，各接口可以提出自己的中断请求信号，在8259A中再与屏蔽字比较。对应位（IMRi）若为1，则该请求（IRRi）被屏蔽，不会被送往CPU。</p>\n<p><strong>INT</strong>：用来给CPU发送中断信号</p>\n<p><strong>INTA</strong>：用来接收CPU的INTA中断响应信号</p>\n<h2 id=\"服务程序入口地址的获取方式\"><a href=\"#服务程序入口地址的获取方式\" class=\"headerlink\" title=\"服务程序入口地址的获取方式\"></a>服务程序入口地址的获取方式</h2><h3 id=\"向量中断\"><a href=\"#向量中断\" class=\"headerlink\" title=\"向量中断\"></a>向量中断</h3><ul>\n<li><p>中断向量：采用向量化的中断响应方式，<strong>将中断服务程序的入口地址及其程序状态字存放在特定的存储区中</strong>，所有的中断服务程序入口地址和状态字一起，称为中断向量。</p>\n</li>\n<li><p>中断向量表：用来存放中断向量的一种表。</p>\n<p>在实际的系统中，常将所有中断服务程序的入口地址（或包括服务程序状态字）组织成一个一维表格，并<strong>存放于一段连续的存储区</strong>，此表就是中断向量表。</p>\n</li>\n<li><p>向量地址：访问中断向量表的地址码，即读取中断向量所需的地址（也可称为中断指针）。</p>\n</li>\n<li><p><strong>向量中断</strong>：将各个中断服务程序的入口地址（或包括状态字）组织成中断向量表；响应中断时，由<strong>硬件直接产生</strong>对应于中断源的<strong>向量地址</strong>；据此访问中断向量表，从中读取zx</p>\n</li>\n<li><p>服</p>\n</li>\n<li><p>务程序入口地址，由此转向服务程序的执行。这些工作在中断周期IT中由硬件直接实现。</p>\n</li>\n</ul>\n<h4 id=\"中断向量表的组成\"><a href=\"#中断向量表的组成\" class=\"headerlink\" title=\"中断向量表的组成\"></a>中断向量表的组成</h4><p>在IBMPC中，中断向量表在主存中占用<strong>0—1023号地址单元（即1K）</strong>，每个中断源占用<strong>4个单元</strong>，因此，该表中可存放<strong>256个中断源</strong>。</p>\n<p>$\\text { 组成 }\\left\\{\\begin{array}{ll}<br>\\text { 专用区 } &amp; \\text { 中断类型码：0-4型 } \\\\<br>\\text { 系统保留区 } &amp; \\text { 中断类型码：5-31型 } \\\\<br>\\text { 用户扩展区 } &amp; \\text { 中断类型码：32-255型 }<br>\\end{array}\\right.$</p>\n<h4 id=\"从中断向量表中获取中断服务程序入口地址\"><a href=\"#从中断向量表中获取中断服务程序入口地址\" class=\"headerlink\" title=\"从中断向量表中获取中断服务程序入口地址\"></a>从中断向量表中获取中断服务程序入口地址</h4><p>形成向量地址后根据中断向量表获取中断服务程序入口地址。根据中断方式，向量地址的形成有两种：</p>\n<ul>\n<li>硬中断：$向量地址=中断类型码\\times 4$</li>\n<li>软中断：$向量地址=中断号\\times 4$</li>\n</ul>\n<p>模型机向量表：</p>\n<p>M按<strong>字编址</strong>。一个入口地址16位，占一个编址单元。</p>\n<p>向量地址=中断号+2（单元地址）</p>\n<p><img src=\"https://pic.imgdb.cn/item/6577fc77c458853aef2a7b49.jpg\" alt=\"\"></p>\n<p>IBM PC向量表（从主存0#单元开始安排）</p>\n<p>M按<strong>字节编址</strong>。一个入口地址32位，占4个编址单元。</p>\n<p>向量地址=中断号 × 4</p>\n<p><img src=\"https://pic.imgdb.cn/item/6577fd8cc458853aef2dbfec.jpg\" alt=\"\"></p>\n<h3 id=\"非向量中断\"><a href=\"#非向量中断\" class=\"headerlink\" title=\"非向量中断\"></a>非向量中断</h3><p>CPU响应中断时只产生一个固定的地址，由此读取中断查询程序的入口地址，通过软件查询，确定被优先批准的中断源，然后分支进入相应的中断服务程序。</p>\n<h4 id=\"响应中断的条件\"><a href=\"#响应中断的条件\" class=\"headerlink\" title=\"响应中断的条件\"></a>响应中断的条件</h4><ul>\n<li><p>有中断请求信号发生，如IREQi或INT n。</p>\n</li>\n<li><p>该中断请求未被屏蔽。</p>\n</li>\n<li><p>CPU处于开中断状态，即中断允许触发器TIEN=1（或中断允许标志位IF=1）。</p>\n</li>\n<li><p>没有更重要的事件要处理（如因<strong>故障</strong>引起的内部中断，或是其优先权高于程序中断的<strong>DMA请求</strong>等）。</p>\n</li>\n<li><p>CPU刚刚执行的指令不是停机指令。</p>\n</li>\n<li><p>在一条指令结束时响应（因为程序中断的过程是程序切换过程, 不能在一条指令执行的中间就切换）。</p>\n</li>\n</ul>\n<h4 id=\"响应过程\"><a href=\"#响应过程\" class=\"headerlink\" title=\"响应过程\"></a>响应过程</h4><p><img src=\"https://pic.imgdb.cn/item/6578006bc458853aef3649e5.jpg\" alt=\"\"></p>\n<h2 id=\"中断处理\"><a href=\"#中断处理\" class=\"headerlink\" title=\"中断处理\"></a>中断处理</h2><p>CPU执行中断服务程序。</p>\n<p><strong>中断处理</strong></p>\n<ul>\n<li><p>单级中断</p>\n<p>CPU响应后只处理一个中断源的请求，处理完毕后才能响应新的请求。</p>\n</li>\n<li><p>多重中断</p>\n<p>在某次中断服务过程中，允许响应处理<strong>更高级别</strong>的中断请求。</p>\n</li>\n</ul>\n<p><img src=\"https://pic.imgdb.cn/item/657801c2c458853aef3a6c6d.jpg\" alt=\"\"></p>\n<p><strong>允许多重中断的处理方式</strong></p>\n<p><img src=\"https://pic.imgdb.cn/item/65780267c458853aef3c601e.jpg\" alt=\"\"></p>\n<p><strong>恢复现场与返回原程序</strong></p>\n<p>在编制中断服务程序时应遵循一个原则：在响应过程、保护现场、恢复现场等过渡状态中，应当关中断，使之不受打扰。</p>\n<h2 id=\"中断接口\"><a href=\"#中断接口\" class=\"headerlink\" title=\"中断接口\"></a>中断接口</h2><h3 id=\"组成（寄存器级）\"><a href=\"#组成（寄存器级）\" class=\"headerlink\" title=\"组成（寄存器级）\"></a>组成（寄存器级）</h3><ul>\n<li>寄存器选择电路：对接口寄存器寻址。</li>\n<li>命令字寄存器：接收CPU发向外设的命令字，转换为相应操作命令送外设。<ul>\n<li>命令字格式的拟定：用代码表示各种命令</li>\n</ul>\n</li>\n<li>状态字寄存器：反映设备和接口的运行状态。</li>\n<li>数据缓冲器：传送数据，实现缓冲</li>\n<li>控制逻辑：<ul>\n<li>请求信号产生逻辑</li>\n<li>电平转换逻辑</li>\n<li>串-并转换逻辑（串口）</li>\n<li>扩展中断源</li>\n</ul>\n</li>\n<li>公用中断控制器<ul>\n<li>接收外设请求，判优，送出公共请求INT</li>\n<li>接收中断批准INTA，送出中断号（中断类型码）</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://pic.imgdb.cn/item/65780388c458853aef4003e1.jpg\" alt=\"\"></p>\n<h3 id=\"工作过程（外中断）\"><a href=\"#工作过程（外中断）\" class=\"headerlink\" title=\"工作过程（外中断）\"></a>工作过程（外中断）</h3><ul>\n<li>初始化：设置工作方式、屏蔽字、分配中断类型码等</li>\n<li>启动设备（送命令字）</li>\n<li>设备请求中断</li>\n<li>中断控制器汇集各请求，向CPU送INT</li>\n<li>CPU响应，发INTA</li>\n<li>中断控制器送出中断号</li>\n<li>CPU执行中断隐指令，转中断服务程序</li>\n</ul>\n<h3 id=\"接口设计\"><a href=\"#接口设计\" class=\"headerlink\" title=\"接口设计\"></a>接口设计</h3><p>涉及命令字、状态字格式的拟定，中断源的扩展。</p>\n","text":"中断方式及接口中断：CPU暂时中止现行程序的执行，转去执行为某个随机事态服务的中断处理程序。处理完毕后自动恢复原程序的执行。 实质： 程序切换。 方法： 保存断...","permalink":"/post/中断","photos":[],"count_time":{"symbolsCount":"3.6k","symbolsTime":"3 mins."},"categories":[],"tags":[{"name":"计算机组成原理","slug":"计算机组成原理","count":10,"path":"api/tags/计算机组成原理.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%B8%AD%E6%96%AD%E6%96%B9%E5%BC%8F%E5%8F%8A%E6%8E%A5%E5%8F%A3\"><span class=\"toc-text\">中断方式及接口</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%AD%E6%96%AD%E5%85%A8%E8%BF%87%E7%A8%8B\"><span class=\"toc-text\">中断全过程</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%AD%E6%96%AD%E8%AF%B7%E6%B1%82%E7%9A%84%E4%BA%A7%E7%94%9F\"><span class=\"toc-text\">中断请求的产生</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%AD%E6%96%AD%E8%AF%B7%E6%B1%82%E7%9A%84%E4%BC%A0%E9%80%81\"><span class=\"toc-text\">中断请求的传送</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%AD%E6%96%AD%E8%AF%B7%E6%B1%82%E4%BC%98%E5%85%88%E7%BA%A7%E5%88%A4%E6%96%AD\"><span class=\"toc-text\">中断请求优先级判断</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%A4%96%E8%AE%BE%E8%AF%B7%E6%B1%82%E7%9A%84%E5%88%A4%E4%BC%98%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">外设请求的判优方法</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%AD%E6%96%AD%E5%93%8D%E5%BA%94\"><span class=\"toc-text\">中断响应</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BC%98%E5%85%88%E6%9D%83%E9%80%BB%E8%BE%91%E4%B8%8E%E5%B1%8F%E8%94%BD%E6%8A%80%E6%9C%AF\"><span class=\"toc-text\">*优先权逻辑与屏蔽技术</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%9C%8D%E5%8A%A1%E7%A8%8B%E5%BA%8F%E5%85%A5%E5%8F%A3%E5%9C%B0%E5%9D%80%E7%9A%84%E8%8E%B7%E5%8F%96%E6%96%B9%E5%BC%8F\"><span class=\"toc-text\">服务程序入口地址的获取方式</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%90%91%E9%87%8F%E4%B8%AD%E6%96%AD\"><span class=\"toc-text\">向量中断</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%B8%AD%E6%96%AD%E5%90%91%E9%87%8F%E8%A1%A8%E7%9A%84%E7%BB%84%E6%88%90\"><span class=\"toc-text\">中断向量表的组成</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BB%8E%E4%B8%AD%E6%96%AD%E5%90%91%E9%87%8F%E8%A1%A8%E4%B8%AD%E8%8E%B7%E5%8F%96%E4%B8%AD%E6%96%AD%E6%9C%8D%E5%8A%A1%E7%A8%8B%E5%BA%8F%E5%85%A5%E5%8F%A3%E5%9C%B0%E5%9D%80\"><span class=\"toc-text\">从中断向量表中获取中断服务程序入口地址</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%9D%9E%E5%90%91%E9%87%8F%E4%B8%AD%E6%96%AD\"><span class=\"toc-text\">非向量中断</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%93%8D%E5%BA%94%E4%B8%AD%E6%96%AD%E7%9A%84%E6%9D%A1%E4%BB%B6\"><span class=\"toc-text\">响应中断的条件</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%93%8D%E5%BA%94%E8%BF%87%E7%A8%8B\"><span class=\"toc-text\">响应过程</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%AD%E6%96%AD%E5%A4%84%E7%90%86\"><span class=\"toc-text\">中断处理</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%AD%E6%96%AD%E6%8E%A5%E5%8F%A3\"><span class=\"toc-text\">中断接口</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%BB%84%E6%88%90%EF%BC%88%E5%AF%84%E5%AD%98%E5%99%A8%E7%BA%A7%EF%BC%89\"><span class=\"toc-text\">组成（寄存器级）</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%B7%A5%E4%BD%9C%E8%BF%87%E7%A8%8B%EF%BC%88%E5%A4%96%E4%B8%AD%E6%96%AD%EF%BC%89\"><span class=\"toc-text\">工作过程（外中断）</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%8E%A5%E5%8F%A3%E8%AE%BE%E8%AE%A1\"><span class=\"toc-text\">接口设计</span></a></li></ol></li></ol></li></ol>","author":{"name":"C4IN","slug":"blog-author","avatar":"/pic/au.jpg","link":"/","description":"这里是破酥的个人博客","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"DMA方式","uid":"add768c24e8f1c57682e3d07a8cf025b","slug":"DMA方式","date":"2023-12-12T07:14:56.000Z","updated":"2023-12-12T08:01:38.003Z","comments":true,"path":"api/articles/DMA方式.json","keywords":null,"cover":[],"text":"DMA方式及接口定义 DMA，即直接存储器访问（Direct Memory Access），它指这样一种传送控制方式：依靠硬件直接在主存与外围设备之间进行数据传...","permalink":"/post/DMA方式","photos":[],"count_time":{"symbolsCount":"1.2k","symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"计算机组成原理","slug":"计算机组成原理","count":10,"path":"api/tags/计算机组成原理.json"}],"author":{"name":"C4IN","slug":"blog-author","avatar":"/pic/au.jpg","link":"/","description":"这里是破酥的个人博客","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"数值计算基本概念","uid":"e66d5f78b8371b501dcd13a0b9f02bba","slug":"数值计算基本概念","date":"2023-12-04T08:10:47.000Z","updated":"2023-12-04T09:40:36.244Z","comments":true,"path":"api/articles/数值计算基本概念.json","keywords":null,"cover":null,"text":"数值计算基本概念补档，之前漏了这一块 误差分类 模型误差：建立数学模型时所引起的误差； 观测误差：测量工具的限制或在数据的获取时随机因素所引起的物理量的误差； ...","permalink":"/post/数值计算基本概念","photos":[],"count_time":{"symbolsCount":741,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"数值计算","slug":"数值计算","count":9,"path":"api/tags/数值计算.json"}],"author":{"name":"C4IN","slug":"blog-author","avatar":"/pic/au.jpg","link":"/","description":"这里是破酥的个人博客","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}