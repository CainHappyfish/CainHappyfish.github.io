{"title":"buuoj_reverse","uid":"50c1e12881881bebe349634ae9e2296b","slug":"buuoj-reverse","date":"2023-08-07T01:34:07.000Z","updated":"2023-09-27T01:07:42.318Z","comments":true,"path":"api/articles/buuoj-reverse.json","keywords":null,"cover":[],"content":"<p>buuoj-RE部分的题解，持续更新中。</p>\n<span id=\"more\"></span>\n<h2 id=\"reverse1\"><a href=\"#reverse1\" class=\"headerlink\" title=\"reverse1\"></a>reverse1</h2><p>在<code>strings</code>窗口发现flag，但直接输入发现flag错误。</p>\n<p><img src=\"https://pic.imgdb.cn/item/650fed61c458853aef662f97.png\" alt=\"\"></p>\n<p>进行反汇编，发现</p>\n<p><img src=\"https://pic.imgdb.cn/item/650fed61c458853aef662fef.png\" alt=\"\"></p>\n<p>该<code>for</code>循环将所有的o替换成0，所以最后的flag是<code>flag&#123;hell0_w0rld&#125;</code>。</p>\n<h2 id=\"reverse2\"><a href=\"#reverse2\" class=\"headerlink\" title=\"reverse2\"></a>reverse2</h2><p>打开<code>strings</code>窗口，发现flag的一部分</p>\n<p><img src=\"https://pic.imgdb.cn/item/650fed60c458853aef662ea5.png\" alt=\"\"></p>\n<p>类似<code>reverse1</code>，该题将 flag 中的 i 和 r 都替换成 1。</p>\n<p><img src=\"https://pic.imgdb.cn/item/650fed60c458853aef662eb2.png\" alt=\"\"></p>\n<h3 id=\"内涵的软件\"><a href=\"#内涵的软件\" class=\"headerlink\" title=\"内涵的软件\"></a>内涵的软件</h3><p>打开<code>strings</code>窗口即可发现flag。</p>\n<p><img src=\"https://pic.imgdb.cn/item/650fedaec458853aef6695f0.png\" alt=\"\"></p>\n<h2 id=\"新年快乐\"><a href=\"#新年快乐\" class=\"headerlink\" title=\"新年快乐\"></a>新年快乐</h2><p><img src=\"https://pic.imgdb.cn/item/650fedadc458853aef6694e8.png\" alt=\"\"></p>\n<p>exe 被 upx 压缩，使用命令 <code>upx.exe -d xnkl.exe -o xnkl_unpack.exe</code> 解压。</p>\n<p><img src=\"https://pic.imgdb.cn/item/650fedaec458853aef66967a.png\" alt=\"\"></p>\n<h2 id=\"XOR\"><a href=\"#XOR\" class=\"headerlink\" title=\"XOR\"></a>XOR</h2><p>反汇编，发现flag应该和<code>global</code>有关</p>\n<p><img src=\"https://pic.imgdb.cn/item/650fedadc458853aef669505.png\" alt=\"\"></p>\n<p>找到对应的数据</p>\n<p><img src=\"https://pic.imgdb.cn/item/650fede0c458853aef66c2a7.png\" alt=\"\"></p>\n<p>查看反汇编的代码，发现对flag进行了异或操作，编写脚本：</p>\n<pre><code>&quot;&quot;&quot;\n__global\n__cstring:0000000100000F6E aFKWOXZUPFVMDGH db &#39;f&#39;,0Ah              ; DATA XREF: __data:_global↓o\n__cstring:0000000100000F6E                 db &#39;k&#39;,0Ch,&#39;w&amp;O.@&#39;,11h,&#39;x&#39;,0Dh,&#39;Z;U&#39;,11h,&#39;p&#39;,19h,&#39;F&#39;,1Fh,&#39;v&quot;M#D&#39;,0Eh,&#39;g&#39;\n__cstring:0000000100000F6E                 db 6,&#39;h&#39;,0Fh,&#39;G2O&#39;,0\n&quot;&quot;&quot;\n\nstr_xor = [&#39;f&#39;, 0x0A, &#39;k&#39;, 0x0C, &#39;w&#39;, &#39;&amp;&#39;, &#39;O&#39;, &#39;.&#39;, &#39;@&#39;, 0x11, &#39;x&#39;, 0x0D, &#39;Z&#39;, &#39;;&#39;, &#39;U&#39;, 0x11, &#39;p&#39;, 0x19, &#39;F&#39;, 0x1F,\n           &#39;v&#39;, &#39;&quot;&#39;, &#39;M&#39;, &#39;#&#39;, &#39;D&#39;, 0x0E, &#39;g&#39;, 6, &#39;h&#39;, 0x0F, &#39;G&#39;, &#39;2&#39;, &#39;O&#39;, 0]\n\nprint(len(str_xor))\n\nfor i in range(0, len(str_xor)):\n    if isinstance(str_xor[i], int):\n        str_xor[i] = chr(str_xor[i])\n\nfor i in range(0, len(str_xor) - 1):\n    print(str_xor[i], end=&quot; &quot;)\n\nprocess = &#39;&#39;.join(str_xor)\n\nprint(process)\n\nflag = &#39;&#39;\nfor i in range(0, len(str_xor)-1):\n    flag += chr(ord(str_xor[i]) ^ ord(str_xor[i - 1]))\n\nprint(flag)\n</code></pre><p><img src=\"https://pic.imgdb.cn/item/650fede0c458853aef66c2c1.png\" alt=\"\"></p>\n<h2 id=\"reverse3\"><a href=\"#reverse3\" class=\"headerlink\" title=\"reverse3\"></a>reverse3</h2><p>首先先找到flag</p>\n<p><img src=\"https://pic.imgdb.cn/item/650fede0c458853aef66c30a.png\" alt=\"\"></p>\n<p>进行反编译：</p>\n<p><img src=\"https://pic.imgdb.cn/item/650fede0c458853aef66c34d.png\" alt=\"\"></p>\n<p>发现重要函数<code>sub_4110BE</code>，而该函数返回的是<code>sub_411AB0</code>：</p>\n<pre><code>void *__cdecl sub_411AB0(char *a1, unsigned int a2, int *a3)\n&#123;\n  int v4; // [esp+D4h] [ebp-38h]\n  int v5; // [esp+D4h] [ebp-38h]\n  int v6; // [esp+D4h] [ebp-38h]\n  int v7; // [esp+D4h] [ebp-38h]\n  int i; // [esp+E0h] [ebp-2Ch]\n  unsigned int v9; // [esp+ECh] [ebp-20h]\n  int v10; // [esp+ECh] [ebp-20h]\n  int v11; // [esp+ECh] [ebp-20h]\n  void *v12; // [esp+F8h] [ebp-14h]\n  char *v13; // [esp+104h] [ebp-8h]\n\n  if ( !a1 || !a2 )\n    return 0;\n  v9 = a2 / 3;\n  if ( (int)(a2 / 3) % 3 )\n    ++v9;\n  v10 = 4 * v9;\n  *a3 = v10;\n  v12 = malloc(v10 + 1);\n  if ( !v12 )\n    return 0;\n  j_memset(v12, 0, v10 + 1);\n  v13 = a1;\n  v11 = a2;\n  v4 = 0;\n  while ( v11 &gt; 0 )\n  &#123;\n    byte_41A144[2] = 0;\n    byte_41A144[1] = 0;\n    byte_41A144[0] = 0;\n    for ( i = 0; i &lt; 3 &amp;&amp; v11 &gt;= 1; ++i )\n    &#123;\n      byte_41A144[i] = *v13;\n      --v11;\n      ++v13;\n    &#125;\n    if ( !i )\n      break;\n    switch ( i )\n    &#123;\n      case 1:\n        *((_BYTE *)v12 + v4) = aAbcdefghijklmn[(int)(unsigned __int8)byte_41A144[0] &gt;&gt; 2];\n        v5 = v4 + 1;\n        *((_BYTE *)v12 + v5) = aAbcdefghijklmn[((byte_41A144[1] &amp; 0xF0) &gt;&gt; 4) | (16 * (byte_41A144[0] &amp; 3))];\n        *((_BYTE *)v12 + ++v5) = aAbcdefghijklmn[64];\n        *((_BYTE *)v12 + ++v5) = aAbcdefghijklmn[64];\n        v4 = v5 + 1;\n        break;\n      case 2:\n        *((_BYTE *)v12 + v4) = aAbcdefghijklmn[(int)(unsigned __int8)byte_41A144[0] &gt;&gt; 2];\n        v6 = v4 + 1;\n        *((_BYTE *)v12 + v6) = aAbcdefghijklmn[((byte_41A144[1] &amp; 0xF0) &gt;&gt; 4) | (16 * (byte_41A144[0] &amp; 3))];\n        *((_BYTE *)v12 + ++v6) = aAbcdefghijklmn[((byte_41A144[2] &amp; 0xC0) &gt;&gt; 6) | (4 * (byte_41A144[1] &amp; 0xF))];\n        *((_BYTE *)v12 + ++v6) = aAbcdefghijklmn[64];\n        v4 = v6 + 1;\n        break;\n      case 3:\n        *((_BYTE *)v12 + v4) = aAbcdefghijklmn[(int)(unsigned __int8)byte_41A144[0] &gt;&gt; 2];\n        v7 = v4 + 1;\n        *((_BYTE *)v12 + v7) = aAbcdefghijklmn[((byte_41A144[1] &amp; 0xF0) &gt;&gt; 4) | (16 * (byte_41A144[0] &amp; 3))];\n        *((_BYTE *)v12 + ++v7) = aAbcdefghijklmn[((byte_41A144[2] &amp; 0xC0) &gt;&gt; 6) | (4 * (byte_41A144[1] &amp; 0xF))];\n        *((_BYTE *)v12 + ++v7) = aAbcdefghijklmn[byte_41A144[2] &amp; 0x3F];\n        v4 = v7 + 1;\n        break;\n    &#125;\n  &#125;\n  *((_BYTE *)v12 + v4) = 0;\n  return v12;\n&#125;\n</code></pre><p>查看<code>aAbcdefghijklmn</code>：</p>\n<p><img src=\"https://pic.imgdb.cn/item/650fede0c458853aef66c367.png\" alt=\"\"></p>\n<p>发现是常用的base64编码表，编写脚本：</p>\n<pre><code>import base64\n\n_str = &#39;e3nifIH9b_C@n@dH&#39;\n\nrawDest = &quot;&quot;\nfor i in range(len(_str)):\n    rawDest += chr(ord(_str[i]) - i)\nprint(rawDest)\n\nflag = base64.b64decode(rawDest)\nprint(flag)\n</code></pre><p>得到flag：</p>\n<p><img src=\"https://pic.imgdb.cn/item/650fee19c458853aef66d3c0.png\" alt=\"\"></p>\n<h2 id=\"不一样的flag\"><a href=\"#不一样的flag\" class=\"headerlink\" title=\"不一样的flag\"></a>不一样的flag</h2>","text":"buuoj-RE部分的题解，持续更新中。 reverse1在strings窗口发现flag，但直接输入发现flag错误。 进行反汇编，发现 该for循环将所有的...","permalink":"/post/buuoj-reverse","photos":[],"count_time":{"symbolsCount":"4.2k","symbolsTime":"4 mins."},"categories":[{"name":"CTF","slug":"CTF","count":1,"path":"api/categories/CTF.json"},{"name":"bin","slug":"CTF/bin","count":1,"path":"api/categories/CTF/bin.json"}],"tags":[{"name":"CTF","slug":"CTF","count":1,"path":"api/tags/CTF.json"},{"name":"reverse","slug":"reverse","count":1,"path":"api/tags/reverse.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#reverse1\"><span class=\"toc-text\">reverse1</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#reverse2\"><span class=\"toc-text\">reverse2</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%86%85%E6%B6%B5%E7%9A%84%E8%BD%AF%E4%BB%B6\"><span class=\"toc-text\">内涵的软件</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%96%B0%E5%B9%B4%E5%BF%AB%E4%B9%90\"><span class=\"toc-text\">新年快乐</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#XOR\"><span class=\"toc-text\">XOR</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#reverse3\"><span class=\"toc-text\">reverse3</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%8D%E4%B8%80%E6%A0%B7%E7%9A%84flag\"><span class=\"toc-text\">不一样的flag</span></a></li></ol>","author":{"name":"C4IN","slug":"blog-author","avatar":"/pic/au.jpg","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"多方安全计算介绍","uid":"02610888fe553149eda2045d277295dd","slug":"多方安全计算基础","date":"2023-08-20T02:47:19.000Z","updated":"2023-09-17T13:19:58.186Z","comments":true,"path":"api/articles/多方安全计算基础.json","keywords":null,"cover":[],"text":"多方安全计算安全多方计算(MPC)已经从20世纪80年代的一种理论发展成为今天构建真实系统的工具。在过去的十年中，MPC已经成为理论和应用密码学中最活跃的研究领...","permalink":"/post/多方安全计算基础","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[{"name":"Crypto","slug":"Crypto","count":5,"path":"api/categories/Crypto.json"},{"name":"多方安全计算","slug":"Crypto/多方安全计算","count":3,"path":"api/categories/Crypto/多方安全计算.json"}],"tags":[{"name":"Crypto","slug":"Crypto","count":5,"path":"api/tags/Crypto.json"},{"name":"MPC","slug":"MPC","count":1,"path":"api/tags/MPC.json"}],"author":{"name":"C4IN","slug":"blog-author","avatar":"/pic/au.jpg","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"java","uid":"745fa9d0dd7564f8475d86a8b9ad72f3","slug":"java反射","date":"2023-08-02T01:19:09.000Z","updated":"2023-09-17T13:16:19.310Z","comments":true,"path":"api/articles/java反射.json","keywords":null,"cover":null,"text":" 反射Java反射机制是在运行状态中，对于任意一个类，都能够知道这个类的所有属性和方法；对于任意一个对象，都能够调用它的任意方法和属性。通过反射，Java 代码...","permalink":"/post/java反射","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"编程","slug":"编程","count":11,"path":"api/categories/编程.json"},{"name":"java","slug":"编程/java","count":6,"path":"api/categories/编程/java.json"}],"tags":[{"name":"java","slug":"java","count":4,"path":"api/tags/java.json"}],"author":{"name":"C4IN","slug":"blog-author","avatar":"/pic/au.jpg","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}