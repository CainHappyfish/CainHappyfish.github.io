{"title":"计组复习提纲Q&A","uid":"1de931479310830774321eb838e73515","slug":"计组复习提纲Q-A","date":"2023-12-22T15:35:21.000Z","updated":"2024-01-15T02:37:26.379Z","comments":true,"path":"api/articles/计组复习提纲Q-A.json","keywords":null,"cover":[],"content":"<h1 id=\"第一章-概论\"><a href=\"#第一章-概论\" class=\"headerlink\" title=\"第一章 概论\"></a>第一章 概论</h1><h2 id=\"基本概念及应用\"><a href=\"#基本概念及应用\" class=\"headerlink\" title=\"基本概念及应用\"></a>基本概念及应用</h2><h3 id=\"冯-诺依曼体制？存储程序方式？\"><a href=\"#冯-诺依曼体制？存储程序方式？\" class=\"headerlink\" title=\"冯.诺依曼体制？存储程序方式？\"></a>冯.诺依曼体制？存储程序方式？</h3><h4 id=\"冯诺依曼体制\"><a href=\"#冯诺依曼体制\" class=\"headerlink\" title=\"冯诺依曼体制\"></a><strong>冯诺依曼体制</strong></h4><ul>\n<li>采用二进制形式表示数据和指令</li>\n<li>采用存储程序方式工作（核心)</li>\n<li>由五大部分组成计算机系统的硬件，并规定了这五部分的基本功能<ul>\n<li>运算器</li>\n<li>控制器</li>\n<li>存储器</li>\n<li>输入设备</li>\n<li>输出设备（包括总线、接口）</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"存储程序方式\"><a href=\"#存储程序方式\" class=\"headerlink\" title=\"存储程序方式\"></a>存储程序方式</h4><p>计算机采取：</p>\n<ul>\n<li>事先编制程序</li>\n<li>存储程序</li>\n<li>自动连续运行程序</li>\n</ul>\n<p>的工作方式。</p>\n<h3 id=\"控制流？数据流？\"><a href=\"#控制流？数据流？\" class=\"headerlink\" title=\"控制流？数据流？\"></a>控制流？数据流？</h3><p>控制流：<strong>控制计算机工作</strong>的信息，即指令、命令</p>\n<p>数据流：计算机<strong>加工处理的对象</strong>，即数值型数据、非数值型数据</p>\n<p>两条基本线索是：</p>\n<ul>\n<li>信息的表示</li>\n<li>信息的传送及传送中的控制</li>\n</ul>\n<h3 id=\"模拟信号？数字信号？数字信号有哪两种？\"><a href=\"#模拟信号？数字信号？数字信号有哪两种？\" class=\"headerlink\" title=\"模拟信号？数字信号？数字信号有哪两种？\"></a>模拟信号？数字信号？数字信号有哪两种？</h3><p>在计算机中，信息是通过电信号表示的。</p>\n<p><strong>模拟信号</strong>：是一种随时间连续变化的电信号</p>\n<p><strong>数字信号</strong>：是一种在时间或空间上断续变化的电信号，有两种：</p>\n<ul>\n<li>电平（位）：并行传送</li>\n<li>脉冲：串行传送</li>\n</ul>\n<h3 id=\"总线及其组成？\"><a href=\"#总线及其组成？\" class=\"headerlink\" title=\"总线及其组成？\"></a>总线及其组成？</h3><p><strong>总线</strong>：能为多个部件分时共享的一组信息传送线路及相应的控制逻辑。</p>\n<p><img src=\"https://pic.imgdb.cn/item/657c0fbdc458853aefa2fbdf.jpg\" alt=\"\"></p>\n<h4 id=\"模型机系统结构\"><a href=\"#模型机系统结构\" class=\"headerlink\" title=\"模型机系统结构\"></a>模型机系统结构</h4><p><img src=\"https://pic.imgdb.cn/item/657c1422c458853aefb3f5b2.jpg\" alt=\"\"></p>\n<ul>\n<li>内总线： 16位单向数据传送线，实现ALU和寄存器间的数据交换，<strong>寄存器间数据传送必须通过ALU，不能直接传送</strong></li>\n<li>系统总线：单总线结构。CPU，主存，I/O设备都直接挂接系统总线，包括地址总线，数据总线，控制总线。同步控制。<ul>\n<li>CPU通过MAR（地址寄存器）向地址总线提供数据，选择外部设备，外部设备也可以向地址总线发送地址码。</li>\n<li>CPU通过MDR向数据总线发送或接收数据，通过R/W控制命令决定传送方向及MDR与数据总线的通断。</li>\n</ul>\n</li>\n<li>控制总线：CPU和外部设备向控制总线发出或接收控制信号，主存通常只接收控制信号并提供回答信号。</li>\n</ul>\n<h3 id=\"接口的概念？\"><a href=\"#接口的概念？\" class=\"headerlink\" title=\"接口的概念？\"></a>接口的概念？</h3><p>部件与部件（指硬件或软件）之间的交接部分称为接口；主机系统总线与I/O设备之间的交接部分称为I/O接口。</p>\n<h4 id=\"类型\"><a href=\"#类型\" class=\"headerlink\" title=\"类型\"></a>类型</h4><p>按传送格式： 串行接口、并行接口 </p>\n<p>按时序控制： 同步接口、异步接口</p>\n<p>按信息传送控制方式：中断接口、DMA接口</p>\n<h3 id=\"基本字长？\"><a href=\"#基本字长？\" class=\"headerlink\" title=\"基本字长？\"></a>基本字长？</h3><p>一般是指参加一次定点运算的操作数的位数，如：8、16、32、64位，它影响计算精度、指令功能。</p>\n<h3 id=\"CPU主频？时钟频率？\"><a href=\"#CPU主频？时钟频率？\" class=\"headerlink\" title=\"CPU主频？时钟频率？\"></a>CPU主频？时钟频率？</h3><ul>\n<li>CPU主频</li>\n</ul>\n<p>​    是计算机的振荡器输出的脉冲序列的频率，是计算机中一切操作所依据的时间基准信号，其高低决定了计算机工作速度的快慢。</p>\n<ul>\n<li>时钟频率</li>\n</ul>\n<p>​    是主频脉冲经分频后所形成的时钟脉冲序列的频率，<strong>两个相邻时钟脉冲之间的间隔时间是一个时钟周期时间，也称为节拍。</strong></p>\n<h3 id=\"数据通路宽度？数据传输率？\"><a href=\"#数据通路宽度？数据传输率？\" class=\"headerlink\" title=\"数据通路宽度？数据传输率？\"></a>数据通路宽度？数据传输率？</h3><ul>\n<li>数据通路宽度</li>\n</ul>\n<p>​    指数据总线一次能并行传送的数据位数。</p>\n<ul>\n<li>数据传输率</li>\n</ul>\n<p>​    指数据总线每秒传送的数据量，也称为数据总线的带宽。</p>\n<p>​    公式：$\\text { 总线带宽 }=\\frac{\\text { 总线数据通路宽度 } \\times \\text { 总线时钟频率 }}{8}(\\mathrm{BPS})$</p>\n<h1 id=\"第二章-计算机中的信息表示\"><a href=\"#第二章-计算机中的信息表示\" class=\"headerlink\" title=\"第二章 计算机中的信息表示\"></a>第二章 计算机中的信息表示</h1><h2 id=\"基本概念及应用-1\"><a href=\"#基本概念及应用-1\" class=\"headerlink\" title=\"基本概念及应用\"></a>基本概念及应用</h2><h3 id=\"一个数值型数据的完整表示需三个方面？\"><a href=\"#一个数值型数据的完整表示需三个方面？\" class=\"headerlink\" title=\"一个数值型数据的完整表示需三个方面？\"></a>一个数值型数据的完整表示需三个方面？</h3><ul>\n<li>数的组合规则：进位计数制</li>\n<li>小数点的位置确定：数的定点表示和浮点表示</li>\n<li>符号的选择：带符号数的代码表示</li>\n</ul>\n<h3 id=\"权、基数？\"><a href=\"#权、基数？\" class=\"headerlink\" title=\"权、基数？\"></a>权、基数？</h3><p><strong>基数</strong>：每个数位中所允许的最大数码值+1或每个数位中所允许的最多数码个数。</p>\n<p><strong>权</strong>：是一个与所在数位相关的常数。</p>\n<h3 id=\"真值？机器数的定义？分类？\"><a href=\"#真值？机器数的定义？分类？\" class=\"headerlink\" title=\"真值？机器数的定义？分类？\"></a>真值？机器数的定义？分类？</h3><p>真值：数据真实的值</p>\n<p>机器数是将符号数字化的数，是数字在计算机中的二进制表示形式</p>\n<p>分类：原码补码反码</p>\n<h3 id=\"数的定点表示与浮点表示？\"><a href=\"#数的定点表示与浮点表示？\" class=\"headerlink\" title=\"数的定点表示与浮点表示？\"></a>数的定点表示与浮点表示？</h3><p>定点表示：分为定点整数、定点小数、不定点整数</p>\n<p>浮点表示：IEEE754的标准，数符（S），阶码（E），尾数（M）</p>\n<h3 id=\"指令？指令系统？\"><a href=\"#指令？指令系统？\" class=\"headerlink\" title=\"指令？指令系统？\"></a>指令？指令系统？</h3><p>指令：按某种规律有序排列的、能被CPU识别并执行的二进制代码</p>\n<p>指令系统：一台计算机能执行的所有指令的集合</p>\n<h3 id=\"地址码？寻址方式？地址结构？\"><a href=\"#地址码？寻址方式？地址结构？\" class=\"headerlink\" title=\"地址码？寻址方式？地址结构？\"></a>地址码？寻址方式？地址结构？</h3><h4 id=\"地址码\"><a href=\"#地址码\" class=\"headerlink\" title=\"地址码\"></a>地址码</h4><p><strong>地址码</strong>包括指令中给出操作数或操作数的地址、存放运算结果的地址、下一条指令的地址。</p>\n<h4 id=\"寻址方式：\"><a href=\"#寻址方式：\" class=\"headerlink\" title=\"寻址方式：\"></a>寻址方式：</h4><p>将产生操作数有效地址的方式称为<strong>寻址方式</strong>。</p>\n<p>大致可将众多的寻址方式归纳为以下四大类，其它的寻址方式则是它们的变型或组合。</p>\n<ul>\n<li><p><strong>立即寻址</strong>。在读取指令时也就从指令之中获得了操作数，即操作数包含在指令中。</p>\n</li>\n<li><p><strong>直接寻址类</strong>。直接给出主存地址或寄存器编号，从CPU内或主存单元内读取操作数。</p>\n</li>\n<li><strong>间接寻址类</strong>。先从某寄存器中或主存中读取地址，再按这个地址访问主存以读取操作数。</li>\n<li><strong>变址类</strong>。指令给出的是形式地址（不是最终地址），经过某种变换（例如相加、相减、高低位地址拼接等），才获得有效地址，据此访问主存储器以读取操作数。</li>\n</ul>\n<h4 id=\"直接寻址与寄存器寻址方式的比较\"><a href=\"#直接寻址与寄存器寻址方式的比较\" class=\"headerlink\" title=\"直接寻址与寄存器寻址方式的比较\"></a>直接寻址与寄存器寻址方式的比较</h4><ul>\n<li><p>直接寻址是<strong>访问一次主存</strong>才能读取所需操作数</p>\n</li>\n<li><p>寄存器寻址是从<strong>CPU的寄存器中读取操作数</strong>，不需访问主存，所需时间大约是从主存中读数时间的几分之一到几十分之一，因而寄存器寻址比直接寻址快得多。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>注意：减少指令中地址数目与减少一个地址的位数是两个不同的概念。</p>\n<p>采用<strong>隐地址</strong>可以减少指令中地址的数目；</p>\n<p>采用<strong>寄存器寻址方式、寄存器间址方式</strong>可以使指令中为给出一个地址所需的位数减少。</p>\n<p>其实，<strong>均减少了指令长度</strong>。</p></blockquote>\n</li>\n</ul>\n<h4 id=\"地址结构\"><a href=\"#地址结构\" class=\"headerlink\" title=\"地址结构\"></a>地址结构</h4><ul>\n<li>显地址：在指令代码中明确给出了主存储器单元地址码或者寄存器号</li>\n<li>隐地址：如果地址是以隐含的方式约定，则在指令中并不给出地址码</li>\n</ul>\n<h3 id=\"何谓隐式I-O指令？其主要特点是什么？\"><a href=\"#何谓隐式I-O指令？其主要特点是什么？\" class=\"headerlink\" title=\"何谓隐式I/O指令？其主要特点是什么？\"></a>何谓隐式I/O指令？其主要特点是什么？</h3><p><strong>若将外围设备接口中的寄存器与主存单元统一编址，由同样的总线地址访问</strong>。这样，外设便可看作是总线地址所覆盖的存储空间的一部分，因而主机可以通过传送指令用相同的方式访问存储器和外围设备。对存储器的各种寻址方式同样适合于对外设的寻址，使编制程序灵活方便。这种I/O指令是隐含在传送指令之中的，所以又称为隐式I/O指令。</p>\n<h4 id=\"特点\"><a href=\"#特点\" class=\"headerlink\" title=\"特点\"></a>特点</h4><p>地址码本身可区分存储单元地址和IO端口地址，无需其他操作，采用通用的数据传送指令即可</p>\n<h3 id=\"主机调用外围设备，外设编制可采用那几种方式？\"><a href=\"#主机调用外围设备，外设编制可采用那几种方式？\" class=\"headerlink\" title=\"主机调用外围设备，外设编制可采用那几种方式？\"></a>主机调用外围设备，外设编制可采用那几种方式？</h3><p><strong>单独编址：</strong></p>\n<p><strong>为每个寄存器（IO端口）分配独立的端口地址</strong>，IO指令中给出端口地址，在处理器的指令集中，需要有专门的IO指令来读写端口</p>\n<p><strong>统一编址：</strong></p>\n<p><strong>IO端口占用CPU提供的地址空间的一部分</strong>，比如CPU提供的全部地址空间的低地址部分用于主存单元、高地址部分分配给IO端口以示区分。地址码本身即可区分存储单元和IO端口</p>\n<h2 id=\"计算题\"><a href=\"#计算题\" class=\"headerlink\" title=\"计算题\"></a>计算题</h2><h3 id=\"扩展操作码：根据条件计算指令条数？\"><a href=\"#扩展操作码：根据条件计算指令条数？\" class=\"headerlink\" title=\"扩展操作码：根据条件计算指令条数？\"></a>扩展操作码：根据条件计算指令条数？</h3><p><img src=\"https://pic.imgdb.cn/item/657c2b1ac458853aef0a2d7a.jpg\" alt=\"\"></p>\n<p><strong>设地址长度为n，上一层留出m种状态，下一层便可扩展出$m\\times 2^n$种状态。</strong></p>\n<h3 id=\"根据寻址方式寻找操作数？\"><a href=\"#根据寻址方式寻找操作数？\" class=\"headerlink\" title=\"根据寻址方式寻找操作数？\"></a>根据寻址方式寻找操作数？</h3><h4 id=\"立即寻址\"><a href=\"#立即寻址\" class=\"headerlink\" title=\"立即寻址\"></a>立即寻址</h4><p>指令中在操作码字段后面的部分是操作数本身，也就是在<strong>取出指令的同时也就取出了可以立即使用的操作数</strong>。</p>\n<ul>\n<li><p>立即寻址：绝对地址</p>\n<p>由指令<strong>直接</strong>给出操作数地址，<strong>根据该地址可读取或写入操作数</strong>，这种方式称为直接寻址方式。</p>\n</li>\n<li><p>直接寻址：主存直接寻址</p>\n<p>若指令中给出的地址码是主存的某个单元号，<strong>操作数存放在该指定的主存单元中</strong>，这种寻址方式称为直接寻址或主存直接寻址方式。</p>\n<p><img src=\"https://pic.imgdb.cn/item/657c3b58c458853aef4ba81f.jpg\" alt=\"\"><br><img src=\"https://pic.imgdb.cn/item/658634c7c458853aefa3e7a7.jpg\" alt=\"\"></p>\n</li>\n<li><p>直接寻址：寄存器直接寻址</p>\n<p><img src=\"https://pic.imgdb.cn/item/657c3d62c458853aef551161.jpg\" alt=\"\"></p>\n<p>若指令中给出的地址码是寄存器编号，<strong>操作数存放在该指定的寄存器中</strong>，这种寻址方式称为寄存器寻址或寄存器直接寻址方式。</p>\n<p><img src=\"https://pic.imgdb.cn/item/658634c7c458853aefa3e7a7.jpg\" alt=\"\"></p>\n</li>\n</ul>\n<h4 id=\"间接寻址\"><a href=\"#间接寻址\" class=\"headerlink\" title=\"间接寻址\"></a>间接寻址</h4><ul>\n<li><p>主存间接寻址</p>\n<p>若指令中地址给出的是<strong>间址单元地址</strong>（即<strong>操作数地址的地址</strong>，而不是操作数地址，且在主存），从中读取操作数地址，按照<strong>操作数地址再次访问主存，从相应单元中读写操作数</strong>，这种寻址方式称为<strong>间接寻址或主存间接寻址方式</strong>。</p>\n<p><img src=\"https://pic.imgdb.cn/item/657c417ec458853aef6a350d.jpg\" alt=\"\"></p>\n<p><img src=\"https://pic.imgdb.cn/item/65863655c458853aefa83bd8.jpg\" alt=\"\"></p>\n</li>\n<li><p>寄存器间接寻址</p>\n<p>若指令中给出的地址码是<strong>寄存器编码</strong>，被指定的<strong>寄存器中存放的是操作数地址</strong>，按照该地址访问某主存单元，该单元的内容为操作数，这种寻址方式称为寄存器间接寻址。</p>\n<p><img src=\"https://pic.imgdb.cn/item/657c4472c458853aef7813ff.jpg\" alt=\"\"></p>\n<p><img src=\"https://pic.imgdb.cn/item/65863655c458853aefa83bd8.jpg\" alt=\"\"></p>\n</li>\n</ul>\n<h4 id=\"间接寻址的变形\"><a href=\"#间接寻址的变形\" class=\"headerlink\" title=\"间接寻址的变形\"></a>间接寻址的变形</h4><ul>\n<li><p>自减型寄存器间址</p>\n<p>若指令中给出寄存器号，被指定的<strong>寄存器内容先减1</strong>后作为操作数地址，按照该地址访问主存储器，相应的主存单元内容为操作数，自减型寄存器间址方式常用助记符<code>-(R)</code>表示。 </p>\n<p><img src=\"https://pic.imgdb.cn/item/657c48aec458853aef8b7bb0.jpg\" alt=\"\"></p>\n<p><img src=\"https://pic.imgdb.cn/item/658637e1c458853aefacffdf.jpg\" alt=\"\"></p>\n</li>\n<li><p>堆栈寻址</p>\n<p>堆栈寻址方式是指<strong>操作数在堆栈中</strong>，指令隐含约定<strong>由堆栈指针SP寄存器提供栈顶单元地址</strong>（SP也可以编码形式出现在指令中），进行读出或写入的一种寻址方式。 </p>\n<p><img src=\"https://pic.imgdb.cn/item/657c4da4c458853aefa2b7a6.jpg\" alt=\"\"></p>\n<ul>\n<li><p>压栈：寄存器号$~\\stackrel{\\text { SP }}{\\longrightarrow}~$操作数地址 = (SP) - 1 $~\\stackrel{\\text { M }}{\\longrightarrow}~$操作数</p>\n<p>操作数与寄存器SP的关系为：<code>S = ((SP - 1))</code></p>\n</li>\n<li><p>出栈：寄存器号$~\\stackrel{\\text { SP }}{\\longrightarrow}~$操作数地址$~\\stackrel{\\text { SP }}{\\longrightarrow}~$操作数</p>\n<p>操作数与寄存器SP的关系为：<code>S = ((SP))</code>，弹出后修改堆栈指针：(SP) + 1 $\\rightarrow$ SP</p>\n</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"变址寻址\"><a href=\"#变址寻址\" class=\"headerlink\" title=\"变址寻址\"></a>变址寻址</h4><p>若指令中给出变址寄存器号和一个形式地址，<strong>变址寄存器的内容(称为变址量)与形式地址相加</strong>，得到操作数有效地址(即操作数实际地址)，按照有效地址访问某主存单元，该单元的内容即为操作数，这种寻址方式称为变址寻址方式。变址方式常用助记符<strong>X(R）</strong>表示。</p>\n<p><img src=\"https://pic.imgdb.cn/item/657c5590c458853aefcfc999.jpg\" alt=\"\"></p>\n<p><img src=\"https://pic.imgdb.cn/item/65863ff7c458853aefc573a3.jpg\" alt=\"\"></p>\n<ul>\n<li><p>基址寻址</p>\n<p>若指令中给出<strong>基址寄存器号和一个形式地址</strong>，<strong>基址寄存器内容（作为基准地址）与形式地址（作为位移量）相加</strong>，其和为操作数有效地址(即操作数实际地址)，按照该地址访问主存储器，该单元的内容即为操作数，这种寻址方式称为基址寻址。</p>\n<p><img src=\"https://pic.imgdb.cn/item/657c582cc458853aefde0c94.jpg\" alt=\"\"></p>\n<p><img src=\"https://pic.imgdb.cn/item/65864061c458853aefc68fe8.jpg\" alt=\"\"></p>\n</li>\n<li><p>相对寻址</p>\n<p>若指令中<strong>选定程序计数器PC作为变址寄存器</strong>，或是隐含地指定PC，<strong>指令中给出的形式地址作为位移量</strong>（可正、可负），二者相加后形成操作数的有效地址。这种寻址方式实际上就是<strong>以当前指令位置为基准</strong>，相对它进行位移定位（往前或往后），所以称为相对寻址。</p>\n<p>程序计数器PC的内容为<strong>现行指令地址A</strong>，按地址A从主存中读取指令;</p>\n<p><strong>指令中形式地址段给出位移量d</strong>，它是从现行指令位置到操作数S所在单元之间的距离（单元数）;</p>\n<p><img src=\"https://pic.imgdb.cn/item/657c5a5cc458853aefe9cf59.jpg\" alt=\"\"></p>\n<p><img src=\"https://pic.imgdb.cn/item/657c5aadc458853aefeb64bb.jpg\" alt=\"\"></p>\n<p>==特别注意==</p>\n<p>对于转移指令JMP A，当CU从存储器中取出一个字节时，<strong>会自动执行PC++</strong>。若转移指令的地址X占用两个字节，那么取出该指令后，PC会加2，即（PC） = X + 2。因此执行完该指令要跳到的指令位置是：X+2+A，不是X+1+A。</p>\n</li>\n<li><p>页面寻址</p>\n<p>将PC内容的高位段与位移量相拼接,相对寻址就演变成页面寻址。</p>\n<p>程序计数器PC的内容为A，指令中形式地址段给出位移量d。</p>\n<p><img src=\"https://pic.imgdb.cn/item/657c5c41c458853aeff3f523.jpg\" alt=\"\"></p>\n</li>\n</ul>\n<h3 id=\"IEEE754短浮点数格式表示？\"><a href=\"#IEEE754短浮点数格式表示？\" class=\"headerlink\" title=\"IEEE754短浮点数格式表示？\"></a>IEEE754短浮点数格式表示？</h3><p><img src=\"https://pic.imgdb.cn/item/6579bf41c458853aef6485f3.jpg\" alt=\"\"></p>\n<ul>\n<li><p><strong>短浮点数</strong>（或称短实数、单精度浮点数，32位）</p>\n</li>\n<li><p><strong>长浮点数</strong>（或称长实数、双精度浮点数，64位）</p>\n</li>\n<li><p><strong>临时浮点数</strong>（或称临时实数、扩展精度浮点数，80位）</p>\n</li>\n</ul>\n<p><img src=\"https://pic.imgdb.cn/item/6579bf75c458853aef658797.jpg\" alt=\"\"></p>\n<p>根据浮点数的尾数规格化，我们<strong>省略了一位数字$2^0$</strong>，所以实际上尾数数值应该有24位。</p>\n<p><strong>十进制真值转换为浮点数</strong>：</p>\n<ul>\n<li>先将十进制转换为二进制</li>\n<li>规格化二进制数（隐藏尾数最高位1，还原为真值时需要加回来）</li>\n<li>计算移码表示的阶码，表示为二进制（<strong>偏置值+阶码真值</strong>）</li>\n<li>以短浮点数格式存储该数</li>\n</ul>\n<h4 id=\"例题\"><a href=\"#例题\" class=\"headerlink\" title=\"例题\"></a>例题</h4><p><img src=\"https://pic.imgdb.cn/item/6579c0afc458853aef6b515c.jpg\" alt=\"\"></p>\n<p><img src=\"https://pic.imgdb.cn/item/6579c0dbc458853aef6c2b49.jpg\" alt=\"\"></p>\n<p><img src=\"https://pic.imgdb.cn/item/6579c113c458853aef6d37b1.jpg\" alt=\"\"></p>\n<p><img src=\"https://pic.imgdb.cn/item/6579c147c458853aef6e3275.jpg\" alt=\"\"></p>\n<h4 id=\"IEEE754转为十进制真值\"><a href=\"#IEEE754转为十进制真值\" class=\"headerlink\" title=\"IEEE754转为十进制真值\"></a>IEEE754转为十进制真值</h4><p>单精度浮点计算公式</p>\n<p>$(-1)^{S} \\times 1 . M \\times 2^{E-127}\\left\\{\\begin{array}{l}<br>S: \\text { 符号位 (1为负, } 0 \\text { 为 正) } \\\\<br>M: \\text { 尾数, 表示小数 } \\\\<br>E: \\text { 阶码 }<br>\\end{array}\\right.$</p>\n<p>其他精度只需更换对应的偏置值即可。</p>\n<p><img src=\"https://pic.imgdb.cn/item/6579c1d0c458853aef70c3d7.jpg\" alt=\"\"></p>\n<h1 id=\"第三章-中央处理器\"><a href=\"#第三章-中央处理器\" class=\"headerlink\" title=\"第三章 中央处理器\"></a>第三章 中央处理器</h1><h2 id=\"基本概率及应用\"><a href=\"#基本概率及应用\" class=\"headerlink\" title=\"基本概率及应用\"></a>基本概率及应用</h2><h3 id=\"CPU内部各寄存器的功能？\"><a href=\"#CPU内部各寄存器的功能？\" class=\"headerlink\" title=\"CPU内部各寄存器的功能？\"></a>CPU内部各寄存器的功能？</h3><h4 id=\"通用寄存器组\"><a href=\"#通用寄存器组\" class=\"headerlink\" title=\"通用寄存器组\"></a>通用寄存器组</h4><p>一组<strong>可编程访问</strong>的寄存器，可以提供操作数、运算结果、地址指针、计数器等多种功能。</p>\n<p>在指令系统中为这些R分配了编号，有：<strong>R0~R3，PC，SP，PSW</strong>。</p>\n<p>模型机中：R0、R1、R2、R3</p>\n<p>8086微机中：AX、BX、CX、DX、SP、BP、SI、DI</p>\n<h4 id=\"暂存器\"><a href=\"#暂存器\" class=\"headerlink\" title=\"暂存器\"></a>暂存器</h4><p>用户不能直接访问的R，用来暂存信息，在指令系统中没有为它们分配编号，有C、D。</p>\n<p>暂存器C：从主存中读取<strong>源操作数或源操作数地址</strong>时，使用它。</p>\n<p>暂存器D：从主存中读取<strong>目的作数或目的操作数地址</strong>时，或<strong>中间运算结果</strong>时，使用它。</p>\n<h4 id=\"指令寄存器IR\"><a href=\"#指令寄存器IR\" class=\"headerlink\" title=\"指令寄存器IR\"></a>指令寄存器IR</h4><p>用来<strong>存放现行运行指令</strong>，它的输出是产生微操作命令序列的主要逻辑依据。</p>\n<h4 id=\"程序计数器PC\"><a href=\"#程序计数器PC\" class=\"headerlink\" title=\"程序计数器PC\"></a>程序计数器PC</h4><p>PC提供<strong>后继指令地址</strong>，并送往与主存器相连接的地址寄存器（MAR）。</p>\n<p>后继指令地址=PC+n，模型机中为了简化起见，令n=1，1为单位指令长度</p>\n<h4 id=\"程序状态字寄存器PSW（Program-Status-Word）\"><a href=\"#程序状态字寄存器PSW（Program-Status-Word）\" class=\"headerlink\" title=\"程序状态字寄存器PSW（Program Status Word）\"></a>程序状态字寄存器PSW（Program Status Word）</h4><p>PSW的内容就是表现的<strong>现行程序的状态</strong>。</p>\n<p>包括：</p>\n<ul>\n<li><p>特征位：进位C、溢出V、零Z、负N，允许中断I等； </p>\n</li>\n<li><p>编程设定位。</p>\n</li>\n</ul>\n<p>CPU访问主存时，首先送出地址码，然后送出/接收数据，需：</p>\n<ul>\n<li>当作用在MAR上的<strong>微命令EMAR为低电平</strong>时，MAR输出呈高阻态，与地址总线断开</li>\n<li>当作用在MAR上的<strong>微命令EMAR为高电平</strong>时，MAR输出其内容（地址信息）送往地址总线；</li>\n</ul>\n<h4 id=\"地址寄存器MAR\"><a href=\"#地址寄存器MAR\" class=\"headerlink\" title=\"地址寄存器MAR\"></a>地址寄存器MAR</h4><p><strong>存放被访问单元的地址</strong>。读取指令/存取操作数/操作数地址时，CPU<strong>先将地址信息送入MAR，再由MAR经地址总线送往主存M，找到相应的主存单元</strong>。</p>\n<h4 id=\"数据寄存器MBR（MDR）\"><a href=\"#数据寄存器MBR（MDR）\" class=\"headerlink\" title=\"数据寄存器MBR（MDR）\"></a>数据寄存器MBR（MDR）</h4><p><strong>存放CPU与主存之间交换的数据</strong>。无论是从主存读出的数据还是写入的数据都要经过MBR（MDR）。由控制命令R/W决定传送方向。</p>\n<p>R：由主存单元$~\\rightarrow~$数据总线$~\\rightarrow~$MDR</p>\n<p>W：由MDR$~\\rightarrow~$数据总线$~\\rightarrow~$数据单元</p>\n<h3 id=\"数据通路结构？\"><a href=\"#数据通路结构？\" class=\"headerlink\" title=\"数据通路结构？\"></a>数据通路结构？</h3><p><img src=\"https://pic.imgdb.cn/item/657f20cbc458853aefb068f2.jpg\" alt=\"\"></p>\n<p>各个寻址方式及数据传送的数据通路看计组复习-2  </p>\n<h3 id=\"何谓同步控制方式，何谓异步控制？有何主要特征？应用场合？\"><a href=\"#何谓同步控制方式，何谓异步控制？有何主要特征？应用场合？\" class=\"headerlink\" title=\"何谓同步控制方式，何谓异步控制？有何主要特征？应用场合？\"></a>何谓同步控制方式，何谓异步控制？有何主要特征？应用场合？</h3><h4 id=\"同步控制\"><a href=\"#同步控制\" class=\"headerlink\" title=\"同步控制\"></a>同步控制</h4><p>各项操作<strong>与统一的时序信号同步</strong>称为同步控制。</p>\n<ul>\n<li><p>特点</p>\n<ul>\n<li>时钟周期时间固定</li>\n<li>各步操作的衔接、各部件之间的数据传送受严格同步时钟定时控制，一般采用<strong>由CPU提供的统一时序信号</strong>来控制部件间信息的传送。</li>\n</ul>\n</li>\n<li><p>应用</p>\n<p>用于CPU内部，设备内部、系统内部。</p>\n</li>\n</ul>\n<h4 id=\"异步控制\"><a href=\"#异步控制\" class=\"headerlink\" title=\"异步控制\"></a>异步控制</h4><p>异步控制是指各项操作<strong>按其需要选择不同的时间，不受统一的时钟周期的约束</strong>；各操作之间的衔接与各部件之间的信息交换采取应答方式。</p>\n<ul>\n<li><p>特点：</p>\n<p><strong>没有统一的节拍划分与同步定时脉冲</strong>。</p>\n</li>\n<li><p>应用</p>\n<p>用于<strong>异步总线</strong>操作（各挂接部件速度差异大、传送时间不确定、传送距离较远等）。</p>\n</li>\n</ul>\n<h3 id=\"何谓主从设备，试举例说明\"><a href=\"#何谓主从设备，试举例说明\" class=\"headerlink\" title=\"何谓主从设备，试举例说明\"></a>何谓主从设备，试举例说明</h3><p><strong>申请使用总线，并获得批准后掌管总线控制权的设备</strong>，称为主设备，否则为从设备。</p>\n<ul>\n<li>主设备：申请并掌握总线权的设备。</li>\n<li>从设备： 响应主设备请求的设备。</li>\n</ul>\n<h3 id=\"同步控制中如何引入异步应答的，试举例说明\"><a href=\"#同步控制中如何引入异步应答的，试举例说明\" class=\"headerlink\" title=\"同步控制中如何引入异步应答的，试举例说明\"></a>同步控制中如何引入异步应答的，试举例说明</h3><p>以固定时钟周期作为时序基础，引入应答思想。</p>\n<p><img src=\"https://pic.imgdb.cn/item/6584375ec458853aefc6f40f.jpg\" alt=\"\"></p>\n<h3 id=\"微程序控制思想的基本要点是什么？\"><a href=\"#微程序控制思想的基本要点是什么？\" class=\"headerlink\" title=\"微程序控制思想的基本要点是什么？\"></a>微程序控制思想的基本要点是什么？</h3><ul>\n<li><p>将控制器所需的微命令，以代码（微码）形式编成微指令，存入一个ROM构成的控制存储器中。<br>……将存储逻辑引入CPU。</p>\n</li>\n<li><p>将各种机器指令的操作分解为若干微操作序列。  </p>\n<p>……将程序技术引入CPU的构成级。</p>\n</li>\n</ul>\n<p>上面从两个角度阐明了<strong>微程序控制</strong>的基本概念：</p>\n<ul>\n<li>微命令的产生方式</li>\n<li>微程序与机器指令之间的对应关系</li>\n</ul>\n<h3 id=\"判断下面叙述是否正确，说明理由：串行加法器中的进位链是串行进位链，并行加法器中的进位链只有并行进位链。\"><a href=\"#判断下面叙述是否正确，说明理由：串行加法器中的进位链是串行进位链，并行加法器中的进位链只有并行进位链。\" class=\"headerlink\" title=\"判断下面叙述是否正确，说明理由：串行加法器中的进位链是串行进位链，并行加法器中的进位链只有并行进位链。\"></a>判断下面叙述是否正确，说明理由：串行加法器中的进位链是串行进位链，并行加法器中的进位链只有并行进位链。</h3><p>错，并行加法器中的进位链可以并行串行结合</p>\n<h3 id=\"常用的加法器进位链结构有哪几种？\"><a href=\"#常用的加法器进位链结构有哪几种？\" class=\"headerlink\" title=\"常用的加法器进位链结构有哪几种？\"></a>常用的加法器进位链结构有哪几种？</h3><ul>\n<li>串行进位链</li>\n<li>并行进位链</li>\n</ul>\n<h3 id=\"组合逻辑控制器、微程序控制器有何区别？\"><a href=\"#组合逻辑控制器、微程序控制器有何区别？\" class=\"headerlink\" title=\"组合逻辑控制器、微程序控制器有何区别？\"></a>组合逻辑控制器、微程序控制器有何区别？</h3><p>控制器：控制部件的主要功能是负责对指令进行译码，并且发出为完成每条指令所要执行的各种操作的控制信号（微命令）</p>\n<ul>\n<li><p>组合逻辑控制方式：综合化简产生微命令的方式，形成逻辑式，<strong>由组合逻辑电路产生微命令</strong>；</p>\n<p>优缺点：产生微命令的速度较快、设计不规整，设计效率低、不易修改、扩展指令系统功能。</p>\n<p>应用场合：用于高速计算机，或小规模计算机</p>\n</li>\n<li><p>微程序控制方式 ：设计CPU时，<strong>根据指令系统事先编制好微程序</strong>，并存入控制存储器（CM</p>\n</li>\n</ul>\n<h3 id=\"组合逻辑控制器、微程序控制器的时序系统是如何划分的？\"><a href=\"#组合逻辑控制器、微程序控制器的时序系统是如何划分的？\" class=\"headerlink\" title=\"组合逻辑控制器、微程序控制器的时序系统是如何划分的？\"></a>组合逻辑控制器、微程序控制器的时序系统是如何划分的？</h3><p>采用三级时序系统：<strong>工作周期、时钟周期、工作脉冲</strong></p>\n<ul>\n<li><p>工作周期：FT、ST、DT、ET、DMAT、IT</p>\n</li>\n<li><p>时钟周期（节拍）：以访存时间作为一步操作时间</p>\n</li>\n<li><p>工作脉冲：同步定时脉冲控制定时操作，每个时钟周期结束时设置一个脉冲</p>\n</li>\n</ul>\n<h3 id=\"微命令、微操作、微指令、微指令周期、微程序？\"><a href=\"#微命令、微操作、微指令、微指令周期、微程序？\" class=\"headerlink\" title=\"微命令、微操作、微指令、微指令周期、微程序？\"></a>微命令、微操作、微指令、微指令周期、微程序？</h3><ul>\n<li>微命令：<strong>构成控制信号序列的最小单位</strong>，又称微信号，指那些直接作用于部件或控制门电路的命令。</li>\n</ul>\n<p>​    如：打开或关闭某传送通路的电信命令，或对触发器或R进行同步打入，置位、复位等的控制脉冲。</p>\n<ul>\n<li><p>微操作：由<strong>微命令控制实现</strong>的最基本的操作称为微操作，如：开门、关门、选择。</p>\n</li>\n<li><p>微周期：<strong>从控制存储器中读取一条微指令并执行相应的一步操作所需的时间</strong>，称为一个微周期或微指令周期。<strong>通常一个时钟周期为一个微周期</strong>。</p>\n</li>\n<li>微指令：<strong>每个微周期的操作所需的微命令组成一条微指令。</strong>从控制存储器的组织角度讲，每个单元存放一条微指令。</li>\n<li>微程序：<strong>一系列微指令的有序集合</strong>称为微程序，用来解释执行一条机器指令。</li>\n</ul>\n<h3 id=\"1位全加器的结构及关系表达式。\"><a href=\"#1位全加器的结构及关系表达式。\" class=\"headerlink\" title=\"1位全加器的结构及关系表达式。\"></a>1位全加器的结构及关系表达式。</h3><p><img src=\"https://pic.imgdb.cn/item/6584395dc458853aefcf089c.jpg\" alt=\"\"></p>\n<p>$\\begin{array}{l}<br>\\Sigma_{i}=\\left(A_{i} \\oplus B_{i}\\right) \\oplus C_{i-1} \\\\<br>C_{i}=A_{i} B_{i}+\\left(A_{i} \\oplus B_{i}\\right) C_{i-1}<br>\\end{array}$</p>\n<h3 id=\"时序信号？时序系统？\"><a href=\"#时序信号？时序系统？\" class=\"headerlink\" title=\"时序信号？时序系统？\"></a>时序信号？时序系统？</h3><ul>\n<li>时序信号：计算机操作的时间标志</li>\n<li>时序系统：即时序信号与操作的关系，用于规定各项操作所需的时间和时机</li>\n</ul>\n<h2 id=\"计算题-1\"><a href=\"#计算题-1\" class=\"headerlink\" title=\"计算题\"></a>计算题</h2><p>$C_{i}=A_{i} B_{i}+\\left(A_{i} \\oplus B_{i}\\right) C_{i-1}$</p>\n<p>令</p>\n<p>$G_{i}=A_{i} B_{i}$进位产生函数（ 本地进位 ）</p>\n<p>$P_{i}=A_{i} \\oplus B_{i}$进位传递函数（传递进位）</p>\n<h3 id=\"并行加法器中的串行进位链结构：-C-n-G-n-P-nC-n-1\"><a href=\"#并行加法器中的串行进位链结构：-C-n-G-n-P-nC-n-1\" class=\"headerlink\" title=\"并行加法器中的串行进位链结构：$C_n = G_n + P_nC_{n-1}$\"></a>并行加法器中的串行进位链结构：$C_n = G_n + P_nC_{n-1}$</h3><p>各级进位信号直接依赖于低一级的进位信号。</p>\n<p>关系式：</p>\n<p>$\\begin{array}{l}<br>\\mathrm{C}_{1}=\\mathrm{G}_{1}+\\mathrm{P}_{1} \\mathrm{C}_{0} \\\\<br>\\mathrm{C}_{2}=\\mathrm{G}_{2}+\\mathrm{P}_{2} \\mathrm{C}_{1} \\\\<br>\\cdots \\cdots \\\\<br>\\mathrm{C}_{\\mathrm{n}}=\\mathrm{G}_{\\mathrm{n}}+\\mathrm{P}_{\\mathrm{n}} \\mathrm{C}_{\\mathrm{n}-1}<br>\\end{array}$</p>\n<p><img src=\"https://pic.imgdb.cn/item/65843d6bc458853aefe27f82.jpg\" alt=\"\"></p>\n<p>结构简单，运算较慢</p>\n<h4 id=\"并行进位链结构：-C-n-G-n-P-nG-n-1-…-P-n…P-1C-0\"><a href=\"#并行进位链结构：-C-n-G-n-P-nG-n-1-…-P-n…P-1C-0\" class=\"headerlink\" title=\"并行进位链结构：$C_n = G_n + P_nG_{n-1}+ … + P_n…P_1C_0$\"></a>并行进位链结构：$C_n = G_n + P_nG_{n-1}+ … + P_n…P_1C_0$</h4><p>各级进位信号是并行（同时）形成的。</p>\n<p>关系式：</p>\n<p>$\\begin{array}{l}<br>C_{1}=G_{1}+P_{1} C_{0} \\\\<br>C_{2}=G_{2}+P_{2} G_{1}+P_{2} P_{1} C_{0} \\\\<br>\\cdots \\cdots \\\\<br>C_{n}=G_{n}+P_{n} G_{n-1}+\\cdots+P_{n} \\cdots P_{1} C_{0}<br>\\end{array}$</p>\n<p><img src=\"https://pic.imgdb.cn/item/65843e17c458853aefe5ff60.jpg\" alt=\"\"></p>\n<p>结构复杂，运算快</p>\n<h3 id=\"原码一位乘法（要求运算过程）\"><a href=\"#原码一位乘法（要求运算过程）\" class=\"headerlink\" title=\"原码一位乘法（要求运算过程）\"></a>原码一位乘法（要求运算过程）</h3><p>取两个操作数的绝对值相乘，每步处理一位乘法，符号位单独处理。</p>\n<h4 id=\"运算规则\"><a href=\"#运算规则\" class=\"headerlink\" title=\"运算规则\"></a>运算规则</h4><ul>\n<li><p>寄存器分配与初始值：ABC三个寄存器</p>\n<ul>\n<li>A存放<strong>部分积累加和</strong>，初始值为0（双符号位00表示）</li>\n<li>B存放<strong>被乘数X（绝对值）</strong>，此时，符号位为双符号位00（在乘的过程中，B中的值一直保持不变）</li>\n<li>C存放<strong>乘数Y（绝对值）</strong>，将符号位去掉；C寄存器的初始值是乘数Y的尾数（有效位数），以后每乘一次，将已处理的低位乘数右移舍去，同时将A寄存器的末位移入C寄存器的高位。</li>\n</ul>\n</li>\n<li><p>符号位：A，B均设置<strong>双符号位</strong></p>\n</li>\n<li>基本操作<ul>\n<li>C存放乘数Y（绝对值），将符号位去掉</li>\n<li>C寄存器的初始值是乘数Y的尾数（有效位数），以后每乘一次，将已处理的低位乘数右移舍去，同时将A寄存器的末位移入C寄存器的高位。</li>\n</ul>\n</li>\n</ul>\n<p>在原码一位乘中，每步只处理一位乘数，即<strong>位于C寄存器末位的乘数，也称之为判断位Cn</strong>：</p>\n<ul>\n<li><strong>若$C_n=1$，则部分积为B，执行A+B操作</strong>，然后将累加和右移一位，用“→”表示</li>\n<li>若$C_n=0$，则部分积为0，执行A+0操作，然后右移。或<strong>直接让A右移一位</strong>。 </li>\n</ul>\n<p>右移时，A的末位移入C的高位，A的第二符号位移入尾数最高位，第一符号位移入第二符号位，而第 一符号位本身则补0。</p>\n<ul>\n<li><p>操作步骤：</p>\n<p><strong>N次累加与n次移位（最后一次累加后要移位）</strong></p>\n</li>\n<li><p>加符号位</p>\n</li>\n<li><p>微命令设置</p>\n<p>$\\begin{array}{l}<br>C_{n}=1, \\text { 即 } A+B:+A 、+B 、(A+B), \\Sigma / 2 \\rightarrow A 、 \\vec{C}, C P_{A} 、 C P_{C} \\\\<br>C_{n}=0, \\text { 即 } A+0:+A 、(A), \\Sigma / 2 \\rightarrow A, \\vec{C}, C_{A} 、 C P_{C}<br>\\end{array}$</p>\n<p><img src=\"https://pic.imgdb.cn/item/6586779cc458853aef77e4df.jpg\" alt=\"\"></p>\n</li>\n</ul>\n<h2 id=\"设计题\"><a href=\"#设计题\" class=\"headerlink\" title=\"设计题\"></a>设计题</h2><p>CPU的逻辑组成及工作机制</p>\n<h4 id=\"CPU的逻辑组成（模型机框图）\"><a href=\"#CPU的逻辑组成（模型机框图）\" class=\"headerlink\" title=\"CPU的逻辑组成（模型机框图）\"></a>CPU的逻辑组成（模型机框图）</h4><ul>\n<li><p>CPU的逻辑组成→模型机框图</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>见第三章数据通路结构</p></blockquote>\n</li>\n<li><p>CPU内每个寄存器的作用</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>见第三章CPU内各寄存器的功能</p></blockquote>\n</li>\n<li><p>总线的分类及定义</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>见第一章总线及其组成</p></blockquote>\n</li>\n<li><p>控制器的分类及区别</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>见第三章组合逻辑控制器、微程序控制器</p></blockquote>\n</li>\n</ul>\n<h4 id=\"CPU的指令流程\"><a href=\"#CPU的指令流程\" class=\"headerlink\" title=\"CPU的指令流程\"></a>CPU的指令流程</h4><ul>\n<li><p>指令类型：MOV指令、双操作数算数逻辑运算指令、单操作数算数逻辑运算指令、转移/返回指令、转子指令；（主要以MOV指令、双操作数算数逻辑运算指令为主）</p>\n<p><img src=\"https://pic.imgdb.cn/item/65867ac4c458853aef833f9e.jpg\" alt=\"\"></p>\n<p><img src=\"https://pic.imgdb.cn/item/65867b2cc458853aef849f04.jpg\" alt=\"\"></p>\n<p><img src=\"https://pic.imgdb.cn/item/65867b53c458853aef852147.jpg\" alt=\"\"></p>\n<p><img src=\"https://pic.imgdb.cn/item/65867ba4c458853aef862f8b.jpg\" alt=\"\"></p>\n<p><img src=\"https://pic.imgdb.cn/item/65867bd6c458853aef86d5ce.jpg\" alt=\"\"></p>\n<p><img src=\"https://pic.imgdb.cn/item/65867bfdc458853aef875661.jpg\" alt=\"\"></p>\n<p><img src=\"https://pic.imgdb.cn/item/65867c2bc458853aef880974.jpg\" alt=\"\"></p>\n</li>\n<li><p>核心是寻址方式：立即寻址、R、(R)、-(R)、(R)+、@(R)+、X(R)</p>\n<p><img src=\"https://pic.imgdb.cn/item/65867cf5c458853aef8ab247.jpg\" alt=\"\"></p>\n</li>\n</ul>\n<h4 id=\"操作时间表的安排（微命令的安排）：\"><a href=\"#操作时间表的安排（微命令的安排）：\" class=\"headerlink\" title=\"操作时间表的安排（微命令的安排）：\"></a>操作时间表的安排（微命令的安排）：</h4><ul>\n<li>CPU数据通路操作：按照数据的流向分成四段</li>\n</ul>\n<p>​    ALU输入选择→AUL功能选择→移位器功能选择→分配脉冲（打入到寄存器中的脉冲）；</p>\n<ul>\n<li>与访问主存有关的微命令。</li>\n<li>不同工作周期切换时：例如从ST切换到DT则有微命令1→DT, CPT, CPFT, CPST, CPDT, CPET</li>\n<li>相同工作周期内时钟周期的切换：例如ST0到ST1有微命令1→T, CPT</li>\n<li>数据读取相关操作：EMAR, R, EMDR</li>\n<li>数据写入相关操作：EMAR, W<ul>\n<li>写入操作通常在ET发生</li>\n<li>都经过MAR的原因是MAR的功能</li>\n</ul>\n</li>\n</ul>\n<p><strong>FT</strong>：在FT中完成的操作是<strong>公共性操作</strong></p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">指令流程</th>\n<th style=\"text-align:center\">操作时间表</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">M→IR</td>\n<td style=\"text-align:center\">EMAR、R、SIR</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">PC+1→PC</td>\n<td style=\"text-align:center\">PC→A、A+1、DM、CPPC、1→ST</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">CPT（P）、CPFT（P）、</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">CPST（P）、CPDT（P）、CPET（P)</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p><strong>ST</strong>：如果需要<strong>从主存中读取源操作数</strong>（非寄存器寻址），则进入ST</p>\n<p><strong>DT</strong>：如果需要<strong>从主存中读取目的地址或目的操作数（非寄存器寻址）</strong>，则进入DT</p>\n<p><strong>ET</strong>：取得操作数后，CPU进入E，这也是<strong>各类指令都需经历</strong>的最后一个工作阶段</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">指令流程</th>\n<th style=\"text-align:center\">操作时间表</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">C→MDR</td>\n<td style=\"text-align:center\">C→A、输出A、DM、CPMDR、T+1、CPT（P）</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">MDR→M</td>\n<td style=\"text-align:center\">EMAR、W、T+1、CPT（P），</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">PC→MAR</td>\n<td style=\"text-align:center\">PC→A、输出A、DM、CPMAR、1→FT</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">CPT（P）、CPFT（P）、 CPST（P）、CPDT（P）、CPET（P）</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h5 id=\"R\"><a href=\"#R\" class=\"headerlink\" title=\"(R)\"></a><code>(R)</code></h5><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n<th>电平</th>\n<th>脉冲</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>ST0</td>\n<td>Ri→MAR</td>\n<td>Ri→A/B</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>经过ALU传送</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>DM</td>\n<td>CPMAR</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>T+1</td>\n<td>CPT</td>\n</tr>\n<tr>\n<td>ST1</td>\n<td>M→MBR→C</td>\n<td>EMAR</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>R</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>SMBR</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>MBR→B</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>经过ALU传送</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>DM</td>\n<td>CPC</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>1→DT？</td>\n<td>CPDT？</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>1→ET？</td>\n<td>CPET？</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h5 id=\"R-1\"><a href=\"#R-1\" class=\"headerlink\" title=\"-(R)\"></a><code>-(R)</code></h5><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n<th>电平</th>\n<th>脉冲</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>ST0</td>\n<td>Ri-1→Ri，MAR</td>\n<td>Ri→A/B</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>在ALU中A-1</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>DM</td>\n<td>CPMAR,CPR</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>T+1</td>\n<td>CPT</td>\n</tr>\n<tr>\n<td>ST1</td>\n<td>M→MBR→C</td>\n<td>EMAR</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>R</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>SMBR</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>MBR→B</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>经过ALU传送</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>DM</td>\n<td>CPC</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>1→DT?</td>\n<td>CPDT?</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>1→ET?</td>\n<td>CPET?</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h5 id=\"R-2\"><a href=\"#R-2\" class=\"headerlink\" title=\"(R)+\"></a><code>(R)+</code></h5><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n<th>电平</th>\n<th>脉冲</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>ST0</td>\n<td>Ri→MAR</td>\n<td>Ri→A/B</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>经过ALU传送</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>DM</td>\n<td>CPMAR</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>T+1</td>\n<td>CPT</td>\n</tr>\n<tr>\n<td>ST1</td>\n<td>M→MBR→C</td>\n<td>EMAR</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>R</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>SMBR</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>MBR→B</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>经过ALU传送</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>DM</td>\n<td>CPC</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>T+1</td>\n<td>CPT</td>\n</tr>\n<tr>\n<td>ST2</td>\n<td>Ri+1→Ri</td>\n<td>Ri→A/B</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>在ALU中A+1</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>DM</td>\n<td>CPRi</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>1→DT？</td>\n<td>CPDT？</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>1→ET？</td>\n<td>CPET？</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h5 id=\"R-3\"><a href=\"#R-3\" class=\"headerlink\" title=\"@(R)+\"></a><code>@(R)+</code></h5><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n<th>电平</th>\n<th>脉冲</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>ST0</td>\n<td>Ri→MAR</td>\n<td>Ri→A/B</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>经过ALU传送</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>DM</td>\n<td>CPMAR</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>T+1</td>\n<td>CPT</td>\n</tr>\n<tr>\n<td>ST1</td>\n<td>M→MBR→C</td>\n<td>EMAR</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>R</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>SMBR</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>MBR→B</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>经过ALU传送</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>DM</td>\n<td>CPC</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>T+1</td>\n<td>CPT</td>\n</tr>\n<tr>\n<td>ST2</td>\n<td>Ri+1→Ri</td>\n<td>Ri→A/B</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>在ALU中A+1</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>DM</td>\n<td>CPRi</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>T+1</td>\n<td>CPT</td>\n</tr>\n<tr>\n<td>ST3</td>\n<td>C→MAR</td>\n<td>C→A/B</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>在ALU中传送</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>DM</td>\n<td>CPMAR</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>T+1</td>\n<td>CPT</td>\n</tr>\n<tr>\n<td>ST4</td>\n<td>M→MBR→C</td>\n<td>EMAR</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>R</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>SMBR</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>MBR→B</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>经过ALU传送</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>DM</td>\n<td>CPC</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>1→DT?</td>\n<td>CPDT?</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h5 id=\"X-R\"><a href=\"#X-R\" class=\"headerlink\" title=\"X(R)\"></a><code>X(R)</code></h5><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n<th>电平</th>\n<th>脉冲</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>ST0</td>\n<td>PC→MAR</td>\n<td>PC→A</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>经过ALU传送</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>DM</td>\n<td>CPMAR</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>T+1</td>\n<td>CPT</td>\n</tr>\n<tr>\n<td>ST1</td>\n<td>M→MBR→C</td>\n<td>EMAR</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>R</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>SMBR</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>MBR→B</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>经过ALU传送</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>DM</td>\n<td>CPC</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>T+1</td>\n<td>CPT</td>\n</tr>\n<tr>\n<td>ST2</td>\n<td>PC+1→PC</td>\n<td>PC→A</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>在ALU中A+1</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>DM</td>\n<td>CPPC</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>T+1</td>\n<td>CPT</td>\n</tr>\n<tr>\n<td>ST3</td>\n<td>Ri+C→MAR</td>\n<td>Ri→A/B,C→B/A</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>在ALU中A+B</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>DM</td>\n<td>CPMAR</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>T+1</td>\n<td>CPT</td>\n</tr>\n<tr>\n<td>ST4</td>\n<td>M→MBR→C</td>\n<td>EMAR</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>R</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>SMBR</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>MBR→B</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>经过ALU传送</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>DM</td>\n<td>CPC</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>1→DT？</td>\n<td>CPDT？</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>1→ET？</td>\n<td>CPET？</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h1 id=\"第四章-存储子系统\"><a href=\"#第四章-存储子系统\" class=\"headerlink\" title=\"第四章 存储子系统\"></a>第四章 存储子系统</h1><h2 id=\"基本概念及应用-2\"><a href=\"#基本概念及应用-2\" class=\"headerlink\" title=\"基本概念及应用\"></a>基本概念及应用</h2><h3 id=\"主存、缓存、外存？\"><a href=\"#主存、缓存、外存？\" class=\"headerlink\" title=\"主存、缓存、外存？\"></a>主存、缓存、外存？</h3><p>存储系统层次结构（典型结构）：三级存储体系结构</p>\n<ul>\n<li>Cache：容量小、速度高</li>\n<li>主存：容量较大、速度较高</li>\n<li>外存：容量大、速度慢</li>\n</ul>\n<h4 id=\"主存储器\"><a href=\"#主存储器\" class=\"headerlink\" title=\"主存储器\"></a>主存储器</h4><p>能由<strong>CPU直接编程访问</strong>的存储器，它存放当前CPU需要执行的程序与需要处理的数据。</p>\n<p>特点：<strong>存取速度快，容量有限</strong></p>\n<p>为满足CPU编程直接访问的需要，对主存储器的基本要求有三条：</p>\n<ul>\n<li>随机访问</li>\n<li>工作速度快</li>\n<li>具有一定的存储容量</li>\n</ul>\n<h4 id=\"外存储器\"><a href=\"#外存储器\" class=\"headerlink\" title=\"外存储器\"></a>外存储器</h4><p>用来存放需要联机保存但暂不使用的大量程序与数据。</p>\n<p>特定：<strong>存取速度较慢，容量很大</strong></p>\n<p>程序与数据只有进入主存才能真正运行，而外存储器是作为后援的。 </p>\n<h4 id=\"高速缓存（Cache）\"><a href=\"#高速缓存（Cache）\" class=\"headerlink\" title=\"高速缓存（Cache）\"></a>高速缓存（Cache）</h4><p>高速缓存中存放的是最近要使用的程序与数据，作为主存中当前活跃信息的副本。</p>\n<p>特点：<strong>存取速度很快，容量很小</strong></p>\n<h3 id=\"高速缓存Cache用来存放什么内容？设置它的主要目的是什么？\"><a href=\"#高速缓存Cache用来存放什么内容？设置它的主要目的是什么？\" class=\"headerlink\" title=\"高速缓存Cache用来存放什么内容？设置它的主要目的是什么？\"></a>高速缓存Cache用来存放什么内容？设置它的主要目的是什么？</h3><ul>\n<li>用来存放当前活跃的数据与程序，作为主存活跃区的副本</li>\n<li>设置它，是为了解决cpu与主存的速度匹配</li>\n</ul>\n<h3 id=\"存储介质？\"><a href=\"#存储介质？\" class=\"headerlink\" title=\"存储介质？\"></a>存储介质？</h3><ul>\n<li>磁芯存储器</li>\n<li>半导体存储器</li>\n<li>磁表面存储器</li>\n<li>光盘存储器</li>\n</ul>\n<h3 id=\"何谓随机存取？何谓顺序存取？何谓直接存取？请各试举一例。\"><a href=\"#何谓随机存取？何谓顺序存取？何谓直接存取？请各试举一例。\" class=\"headerlink\" title=\"何谓随机存取？何谓顺序存取？何谓直接存取？请各试举一例。\"></a>何谓随机存取？何谓顺序存取？何谓直接存取？请各试举一例。</h3><h4 id=\"随机存取（RAM）\"><a href=\"#随机存取（RAM）\" class=\"headerlink\" title=\"随机存取（RAM）\"></a>随机存取（RAM）</h4><ul>\n<li>可按地址随机地访问任一存储单元</li>\n<li><p>访问各存储单元所需的读/写时间相同</p>\n</li>\n<li><p>应用：主存、高速缓存</p>\n</li>\n</ul>\n<h4 id=\"顺序存取（SAM）\"><a href=\"#顺序存取（SAM）\" class=\"headerlink\" title=\"顺序存取（SAM）\"></a>顺序存取（SAM）</h4><p>顺序存取存储器的信息是<strong>按记录块组织、顺序存放</strong>的，访问时间与信息存放位置有关。</p>\n<p><strong>磁带</strong>是采取顺序存取方式的存储器。</p>\n<h4 id=\"直接存取（DAM）\"><a href=\"#直接存取（DAM）\" class=\"headerlink\" title=\"直接存取（DAM）\"></a>直接存取（DAM）</h4><p>访问时读/写部件先<strong>直接指向一个小区域</strong>，再在该区域内顺序查找。访问时间与数据位置有关。</p>\n<p>例如磁盘、光盘。</p>\n<h3 id=\"静态存储器SRAM、动态存储器DRAM存储原理？\"><a href=\"#静态存储器SRAM、动态存储器DRAM存储原理？\" class=\"headerlink\" title=\"静态存储器SRAM、动态存储器DRAM存储原理？\"></a>静态存储器SRAM、动态存储器DRAM存储原理？</h3><ul>\n<li><p>静态存储器：<strong>利用双稳态触发器存储信息</strong></p>\n</li>\n<li><p>动态存储器：<strong>利用电容存储的电荷存储信息</strong></p>\n</li>\n</ul>\n<h3 id=\"动态刷新分为哪几种情况，各有什么特点？\"><a href=\"#动态刷新分为哪几种情况，各有什么特点？\" class=\"headerlink\" title=\"动态刷新分为哪几种情况，各有什么特点？\"></a>动态刷新分为哪几种情况，各有什么特点？</h3><p>动态MOS存储单元：</p>\n<p>四管单元：保持原状态需要定期向电容补充电荷。读出是非破坏性读出，读出过程即实现刷新</p>\n<p>单管单元： 单管单元是破坏性读出，读出后需重写</p>\n<p>最大刷新间隔：2ms，必须对所有动态单元刷新一遍</p>\n<p>刷新方法：</p>\n<ul>\n<li>单管动态存储器，读出时能自动重写补充电荷</li>\n<li>各动态芯片可同时刷新，片内按行刷新</li>\n</ul>\n<p>刷新周期（存取周期）：刷新一行需要的时间</p>\n<p>刷新周期数：刷新一片芯片所需的周期数由芯片矩阵的行数决定</p>\n<p>对主存的访问：</p>\n<ul>\n<li>CPU访存：由CPU提供行列地址随机访问</li>\n<li>芯片刷新：由刷新地址计数器提供地址定时刷新</li>\n</ul>\n<p>刷新周期的安排方式：</p>\n<ul>\n<li>集中刷新：2ms内集中安排所有刷新周期。用于实时要求不高的场合</li>\n<li>分散刷新：各刷新周期分散安排在存取周期中。造成主存利用率降低，用在低速系统中</li>\n<li>异步刷新：刷新周期分散安排在2ms内。</li>\n</ul>\n<h3 id=\"刷新、重写的区别？\"><a href=\"#刷新、重写的区别？\" class=\"headerlink\" title=\"刷新、重写的区别？\"></a>刷新、重写的区别？</h3><p>刷新：<strong>非破坏性</strong>读出的动态M，需补充电荷以保持原来的信息。</p>\n<p>重写：<strong>破坏性</strong>读出后重写，以恢复原来的信息。</p>\n<h3 id=\"全地址译码方式？部分地址译码方式？\"><a href=\"#全地址译码方式？部分地址译码方式？\" class=\"headerlink\" title=\"全地址译码方式？部分地址译码方式？\"></a>全地址译码方式？部分地址译码方式？</h3><h4 id=\"全地址移码方式\"><a href=\"#全地址移码方式\" class=\"headerlink\" title=\"全地址移码方式\"></a>全地址移码方式</h4><p>==将除了与芯片连接的地址以外的所有高位地址用于译码产生片选信号==</p>\n<p>就是构成存储器时要使用全部地址总线信号，<strong>即所有的高位地址信号都用来作为译码器的输入，低位地址信号接存储芯片的地址输入线</strong>，从而使存储器芯片上的每一个单元在整个内存空间中具有唯一的地址。</p>\n<h4 id=\"部分地址译码\"><a href=\"#部分地址译码\" class=\"headerlink\" title=\"部分地址译码\"></a>部分地址译码</h4><p>==将除了与芯片连接的地址外的部分高位地址用于译码产生片选信号（易出现地址重叠）==</p>\n<p>就是仅把地址总线的一部分地址信号线与存储器连接，通常是<strong>用高位地址信号的一部分（而不是全部）作为片选译码信号；低位地址信号接存储芯片的地址输入线</strong>。</p>\n<h2 id=\"设计题-1\"><a href=\"#设计题-1\" class=\"headerlink\" title=\"设计题\"></a>设计题</h2><p>半导体存储器逻辑设计：(地址分配、片选逻辑、逻辑框图)，片选逻辑采用全/部分译码方式。</p>\n<p><a href=\"https://cainhappyfish.github.io/post/%E4%B8%BB%E5%AD%98%E5%82%A8%E7%9A%84%E7%BB%84%E7%BB%87\">半导体的组织</a></p>\n<p><img src=\"https://pic.imgdb.cn/item/6586a053c458853aef03fc99.jpg\" alt=\"\"></p>\n<p><img src=\"https://pic.imgdb.cn/item/6586a06cc458853aef0444d6.jpg\" alt=\"\"></p>\n<h1 id=\"第五章-I-O系统\"><a href=\"#第五章-I-O系统\" class=\"headerlink\" title=\"第五章 I/O系统\"></a>第五章 I/O系统</h1><h2 id=\"基本概念及应用-3\"><a href=\"#基本概念及应用-3\" class=\"headerlink\" title=\"基本概念及应用\"></a>基本概念及应用</h2><h3 id=\"系统总线上一般包含哪三组信息？\"><a href=\"#系统总线上一般包含哪三组信息？\" class=\"headerlink\" title=\"系统总线上一般包含哪三组信息？\"></a>系统总线上一般包含哪三组信息？</h3><p>分为<strong>地址、数据、控制线</strong>，包含对应的三组信息。</p>\n<ul>\n<li>数据总线：传输数据信息，决定总线宽度</li>\n<li>地址总线：传输地址信息，决定寻址能力</li>\n<li>控制总线：传输控制信息和状态信息</li>\n</ul>\n<h3 id=\"中断方式定义、实质、特点？\"><a href=\"#中断方式定义、实质、特点？\" class=\"headerlink\" title=\"中断方式定义、实质、特点？\"></a>中断方式定义、实质、特点？</h3><ul>\n<li><p>定义：</p>\n<p><strong>CPU暂时中止现行程序的执行，转去执行为某个随机事态服务的中断处理程序</strong>。处理完毕后自动恢复原程序的执行。</p>\n</li>\n<li><p>实质：程序切换</p>\n<ul>\n<li>方法：保存断点、保护现场、恢复现场、返回断点</li>\n<li>时间：一条指令结束时切换，保证程序的完整性</li>\n</ul>\n</li>\n<li><p>特点：随机性</p>\n<ul>\n<li>随机发生的事态（按键，故障等）</li>\n<li>有意调用，随机请求与处理的事态（调用打印机）</li>\n<li>随机插入的事态（软中断指令插入程序任何位置）</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"中断向量、中断向量表、向量地址？\"><a href=\"#中断向量、中断向量表、向量地址？\" class=\"headerlink\" title=\"中断向量、中断向量表、向量地址？\"></a>中断向量、中断向量表、向量地址？</h3><ul>\n<li>中断类型码：每个中断源对应的编号</li>\n<li>中断向量：中断服务程序入口地址</li>\n<li>中断向量表：存放各中断服务程序的入口地址的单元</li>\n<li>向量地址：访问中断向量表的地址码，可通过计算中断类型码得到<ul>\n<li><strong>模型机中：向量地址=中断号+2</strong></li>\n<li><strong>IBM PC向量表：向量地址 = 中断号 * 4</strong></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"何谓向量中断？何谓非向量中断？各有何优点和缺点？\"><a href=\"#何谓向量中断？何谓非向量中断？各有何优点和缺点？\" class=\"headerlink\" title=\"何谓向量中断？何谓非向量中断？各有何优点和缺点？\"></a>何谓向量中断？何谓非向量中断？各有何优点和缺点？</h3><p>非向量中断：由<strong>软件查询提供</strong>服务程序入口地址</p>\n<ul>\n<li>优点：依靠硬件操作，响应快速</li>\n<li>缺点：逻辑复杂，调整优先级较麻烦</li>\n</ul>\n<p>向量中断：由<strong>硬件直接提供</strong>服务程序入口地址</p>\n<ul>\n<li>优点：硬件逻辑简洁，调整优先级方便</li>\n<li>缺点：响应速度慢</li>\n</ul>\n<h3 id=\"单级中断、多重中断？\"><a href=\"#单级中断、多重中断？\" class=\"headerlink\" title=\"单级中断、多重中断？\"></a>单级中断、多重中断？</h3><ul>\n<li><p>单级中断：</p>\n<p>CPU响应后只处理一个中断源的请求，处理完毕后才能响应新的请求。</p>\n</li>\n<li><p>多级中断</p>\n<p>在某次中断服务过程中，允许响应处理更高级别的中断请求。</p>\n<p>允许多重中断的处理方式：</p>\n<p><img src=\"https://pic.imgdb.cn/item/65850115c458853aef892e34.jpg\" alt=\"\"></p>\n</li>\n<li><p>流程</p>\n<p><img src=\"https://pic.imgdb.cn/item/658500fec458853aef88fd86.jpg\" alt=\"\"></p>\n</li>\n</ul>\n<h3 id=\"中断控制器8259A的工作原理？\"><a href=\"#中断控制器8259A的工作原理？\" class=\"headerlink\" title=\"中断控制器8259A的工作原理？\"></a>中断控制器8259A的工作原理？</h3><p>IRR 中断请求寄存器（Interrupt Request Register）：8位，可存放8个中断请求信号，作为向CPU申请与判优、编码的依据。</p>\n<p>PR 优先级裁决器（Priority Resolver）：即中断源的优先级排队逻辑，选择优先级最高的中断申请者。</p>\n<p>ISR 中断服务寄存器（Interrupt Service Register）：8位，用来存放或记录正在服务中的所有中断请求优先级（如在多重嵌套时），每一位对应一个中断优先级。</p>\n<p>IMR 中断屏蔽寄存器（Interrupt Mask Register）：8位，其内容可由CPU预置。这就是前面提到的集中屏蔽方式，各接口可以提出自己的中断请求信号，在8259A中再与屏蔽字比较。<strong>对应位（<code>IMRi</code>）若为1，则该请求（<code>IRRi</code>）被屏蔽，不会被送往CPU。</strong></p>\n<ul>\n<li>当一个中断请求从IRQ0到IRQ7中的某根线到达 IMR时， IMR首先判断此IR是否被屏蔽，如果被屏蔽，则此中断请求被丢弃；否则，则将其放入IRR中。</li>\n<li>8259比较ISR和IRR中的优先级，若IRR有优先级高的外部中断请求，则通过发送一个 INT信号给 CPU，通知CPU有一个中断到达。</li>\n<li>CPU收到这个信号后，会暂停执行下一条指令，然后发送一个INTA信号给 8259。</li>\n<li>8259收到这个信号后， 将中断号送到数据总线上 。</li>\n<li>CPU从数据总线读取中断号，形成中断服务程序的入口地址（中断周期）。转入中断服务程序。</li>\n</ul>\n<h3 id=\"转子与中断调用的相似、区别？\"><a href=\"#转子与中断调用的相似、区别？\" class=\"headerlink\" title=\"转子与中断调用的相似、区别？\"></a>转子与中断调用的相似、区别？</h3><p>相同点：程序切换</p>\n<p>不同：</p>\n<ul>\n<li><p>转子子程序的执行是由程序员<strong>事先安排</strong>好的，而中断服务程序的执行则是由<strong>随机的中断事件</strong>引起的调用。</p>\n</li>\n<li><p>转子子程序的执行<strong>受到主程序或上层子程序的控制</strong>，而中断服务程序一般与被中断的现行程序<strong>没有关系</strong>。</p>\n</li>\n<li><p>不存在<strong>同时</strong>调用多个转子子程序的情况，而可能发生多个外设同时请求CPU为自己服务的情况。</p>\n</li>\n</ul>\n<h3 id=\"DMA方式定义、实质、特点？\"><a href=\"#DMA方式定义、实质、特点？\" class=\"headerlink\" title=\"DMA方式定义、实质、特点？\"></a>DMA方式定义、实质、特点？</h3><p>依靠硬件直接在主存与外围设备之间进行数据传送，在传送过程中<strong>不需要CPU的干预</strong>，传送结束后通常通过中断方式通知 CPU 。</p>\n<ul>\n<li>特点<ul>\n<li>响应随机请求</li>\n<li>不影响CPU 程序的执行，仅占用总线、无程序切换</li>\n<li>大批量数据的简单传送</li>\n</ul>\n</li>\n<li>应用：<ul>\n<li>主存和高速IO设备之间的简单数据传送</li>\n<li>大批量数据采集系统</li>\n<li>动态存储器DRAM的自动刷新</li>\n</ul>\n</li>\n<li><p>DMA传送过程</p>\n<ul>\n<li><p>程序准备：主程序实现初始化（对DMA控制器和接口</p>\n</li>\n<li><p>传送请求</p>\n</li>\n<li>DMA传送：存储器—直传—IO（硬件实现）</li>\n<li>善后处理：执行中断处理程序</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"程序直传方式，中断方式，DMA方式之间的区别？\"><a href=\"#程序直传方式，中断方式，DMA方式之间的区别？\" class=\"headerlink\" title=\"程序直传方式，中断方式，DMA方式之间的区别？\"></a>程序直传方式，中断方式，DMA方式之间的区别？</h3><p>直接程序传送：依靠CPU 直接执行相关的 IO 程序来实现数据的输入和输出控制 。</p>\n<p>中断方式：设备提出中断请求，主机响应后与设备交换信息，接口中包含中断控制请求。</p>\n<p>DMA方式：直接依靠硬件系统来控制主存和设备之间的数据传送，传送期间无需 CPU 干预，传送结束后通常通过中断方式通知 CPU, 支持高速外设与主存之间进行 DMA 方式交换数据。</p>\n<h2 id=\"计算题-2\"><a href=\"#计算题-2\" class=\"headerlink\" title=\"计算题\"></a>计算题</h2><h3 id=\"在8259A中，如何通过IRR、IMR、ISR的值，判断中断接口是否向CPU发INT信号。\"><a href=\"#在8259A中，如何通过IRR、IMR、ISR的值，判断中断接口是否向CPU发INT信号。\" class=\"headerlink\" title=\"在8259A中，如何通过IRR、IMR、ISR的值，判断中断接口是否向CPU发INT信号。\"></a>在8259A中，如何通过IRR、IMR、ISR的值，判断中断接口是否向CPU发INT信号。</h3><p><img src=\"https://pic.imgdb.cn/item/6584fd23c458853aef8031fb.jpg\" alt=\"\"></p>\n<h3 id=\"如何根据中断类型码（或中断号）生成向量地址。\"><a href=\"#如何根据中断类型码（或中断号）生成向量地址。\" class=\"headerlink\" title=\"如何根据中断类型码（或中断号）生成向量地址。\"></a>如何根据中断类型码（或中断号）生成向量地址。</h3><ul>\n<li><strong>模型机中：向量地址=中断号+2</strong></li>\n<li><strong>IBM PC向量表：向量地址 = 中断号 * 4</strong></li>\n</ul>\n","feature":true,"text":"第一章 概论基本概念及应用冯.诺依曼体制？存储程序方式？冯诺依曼体制 采用二进制形式表示数据和指令 采用存储程序方式工作（核心) 由五大部分组成计算机系统的硬件...","permalink":"/post/计组复习提纲Q-A","photos":[],"count_time":{"symbolsCount":"15k","symbolsTime":"13 mins."},"categories":[],"tags":[{"name":"计算机组成原理","slug":"计算机组成原理","count":10,"path":"api/tags/计算机组成原理.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%AC%AC%E4%B8%80%E7%AB%A0-%E6%A6%82%E8%AE%BA\"><span class=\"toc-text\">第一章 概论</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5%E5%8F%8A%E5%BA%94%E7%94%A8\"><span class=\"toc-text\">基本概念及应用</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%86%AF-%E8%AF%BA%E4%BE%9D%E6%9B%BC%E4%BD%93%E5%88%B6%EF%BC%9F%E5%AD%98%E5%82%A8%E7%A8%8B%E5%BA%8F%E6%96%B9%E5%BC%8F%EF%BC%9F\"><span class=\"toc-text\">冯.诺依曼体制？存储程序方式？</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%86%AF%E8%AF%BA%E4%BE%9D%E6%9B%BC%E4%BD%93%E5%88%B6\"><span class=\"toc-text\">冯诺依曼体制</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%AD%98%E5%82%A8%E7%A8%8B%E5%BA%8F%E6%96%B9%E5%BC%8F\"><span class=\"toc-text\">存储程序方式</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%8E%A7%E5%88%B6%E6%B5%81%EF%BC%9F%E6%95%B0%E6%8D%AE%E6%B5%81%EF%BC%9F\"><span class=\"toc-text\">控制流？数据流？</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%A8%A1%E6%8B%9F%E4%BF%A1%E5%8F%B7%EF%BC%9F%E6%95%B0%E5%AD%97%E4%BF%A1%E5%8F%B7%EF%BC%9F%E6%95%B0%E5%AD%97%E4%BF%A1%E5%8F%B7%E6%9C%89%E5%93%AA%E4%B8%A4%E7%A7%8D%EF%BC%9F\"><span class=\"toc-text\">模拟信号？数字信号？数字信号有哪两种？</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%80%BB%E7%BA%BF%E5%8F%8A%E5%85%B6%E7%BB%84%E6%88%90%EF%BC%9F\"><span class=\"toc-text\">总线及其组成？</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%A8%A1%E5%9E%8B%E6%9C%BA%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84\"><span class=\"toc-text\">模型机系统结构</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%8E%A5%E5%8F%A3%E7%9A%84%E6%A6%82%E5%BF%B5%EF%BC%9F\"><span class=\"toc-text\">接口的概念？</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">类型</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%9F%BA%E6%9C%AC%E5%AD%97%E9%95%BF%EF%BC%9F\"><span class=\"toc-text\">基本字长？</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#CPU%E4%B8%BB%E9%A2%91%EF%BC%9F%E6%97%B6%E9%92%9F%E9%A2%91%E7%8E%87%EF%BC%9F\"><span class=\"toc-text\">CPU主频？时钟频率？</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%95%B0%E6%8D%AE%E9%80%9A%E8%B7%AF%E5%AE%BD%E5%BA%A6%EF%BC%9F%E6%95%B0%E6%8D%AE%E4%BC%A0%E8%BE%93%E7%8E%87%EF%BC%9F\"><span class=\"toc-text\">数据通路宽度？数据传输率？</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%AC%AC%E4%BA%8C%E7%AB%A0-%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%B8%AD%E7%9A%84%E4%BF%A1%E6%81%AF%E8%A1%A8%E7%A4%BA\"><span class=\"toc-text\">第二章 计算机中的信息表示</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5%E5%8F%8A%E5%BA%94%E7%94%A8-1\"><span class=\"toc-text\">基本概念及应用</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%80%E4%B8%AA%E6%95%B0%E5%80%BC%E5%9E%8B%E6%95%B0%E6%8D%AE%E7%9A%84%E5%AE%8C%E6%95%B4%E8%A1%A8%E7%A4%BA%E9%9C%80%E4%B8%89%E4%B8%AA%E6%96%B9%E9%9D%A2%EF%BC%9F\"><span class=\"toc-text\">一个数值型数据的完整表示需三个方面？</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%9D%83%E3%80%81%E5%9F%BA%E6%95%B0%EF%BC%9F\"><span class=\"toc-text\">权、基数？</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%9C%9F%E5%80%BC%EF%BC%9F%E6%9C%BA%E5%99%A8%E6%95%B0%E7%9A%84%E5%AE%9A%E4%B9%89%EF%BC%9F%E5%88%86%E7%B1%BB%EF%BC%9F\"><span class=\"toc-text\">真值？机器数的定义？分类？</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%95%B0%E7%9A%84%E5%AE%9A%E7%82%B9%E8%A1%A8%E7%A4%BA%E4%B8%8E%E6%B5%AE%E7%82%B9%E8%A1%A8%E7%A4%BA%EF%BC%9F\"><span class=\"toc-text\">数的定点表示与浮点表示？</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%8C%87%E4%BB%A4%EF%BC%9F%E6%8C%87%E4%BB%A4%E7%B3%BB%E7%BB%9F%EF%BC%9F\"><span class=\"toc-text\">指令？指令系统？</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%9C%B0%E5%9D%80%E7%A0%81%EF%BC%9F%E5%AF%BB%E5%9D%80%E6%96%B9%E5%BC%8F%EF%BC%9F%E5%9C%B0%E5%9D%80%E7%BB%93%E6%9E%84%EF%BC%9F\"><span class=\"toc-text\">地址码？寻址方式？地址结构？</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%9C%B0%E5%9D%80%E7%A0%81\"><span class=\"toc-text\">地址码</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%AF%BB%E5%9D%80%E6%96%B9%E5%BC%8F%EF%BC%9A\"><span class=\"toc-text\">寻址方式：</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%9B%B4%E6%8E%A5%E5%AF%BB%E5%9D%80%E4%B8%8E%E5%AF%84%E5%AD%98%E5%99%A8%E5%AF%BB%E5%9D%80%E6%96%B9%E5%BC%8F%E7%9A%84%E6%AF%94%E8%BE%83\"><span class=\"toc-text\">直接寻址与寄存器寻址方式的比较</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%9C%B0%E5%9D%80%E7%BB%93%E6%9E%84\"><span class=\"toc-text\">地址结构</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BD%95%E8%B0%93%E9%9A%90%E5%BC%8FI-O%E6%8C%87%E4%BB%A4%EF%BC%9F%E5%85%B6%E4%B8%BB%E8%A6%81%E7%89%B9%E7%82%B9%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F\"><span class=\"toc-text\">何谓隐式I&#x2F;O指令？其主要特点是什么？</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%89%B9%E7%82%B9\"><span class=\"toc-text\">特点</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%BB%E6%9C%BA%E8%B0%83%E7%94%A8%E5%A4%96%E5%9B%B4%E8%AE%BE%E5%A4%87%EF%BC%8C%E5%A4%96%E8%AE%BE%E7%BC%96%E5%88%B6%E5%8F%AF%E9%87%87%E7%94%A8%E9%82%A3%E5%87%A0%E7%A7%8D%E6%96%B9%E5%BC%8F%EF%BC%9F\"><span class=\"toc-text\">主机调用外围设备，外设编制可采用那几种方式？</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%AE%A1%E7%AE%97%E9%A2%98\"><span class=\"toc-text\">计算题</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%89%A9%E5%B1%95%E6%93%8D%E4%BD%9C%E7%A0%81%EF%BC%9A%E6%A0%B9%E6%8D%AE%E6%9D%A1%E4%BB%B6%E8%AE%A1%E7%AE%97%E6%8C%87%E4%BB%A4%E6%9D%A1%E6%95%B0%EF%BC%9F\"><span class=\"toc-text\">扩展操作码：根据条件计算指令条数？</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%A0%B9%E6%8D%AE%E5%AF%BB%E5%9D%80%E6%96%B9%E5%BC%8F%E5%AF%BB%E6%89%BE%E6%93%8D%E4%BD%9C%E6%95%B0%EF%BC%9F\"><span class=\"toc-text\">根据寻址方式寻找操作数？</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%AB%8B%E5%8D%B3%E5%AF%BB%E5%9D%80\"><span class=\"toc-text\">立即寻址</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E9%97%B4%E6%8E%A5%E5%AF%BB%E5%9D%80\"><span class=\"toc-text\">间接寻址</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E9%97%B4%E6%8E%A5%E5%AF%BB%E5%9D%80%E7%9A%84%E5%8F%98%E5%BD%A2\"><span class=\"toc-text\">间接寻址的变形</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%8F%98%E5%9D%80%E5%AF%BB%E5%9D%80\"><span class=\"toc-text\">变址寻址</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#IEEE754%E7%9F%AD%E6%B5%AE%E7%82%B9%E6%95%B0%E6%A0%BC%E5%BC%8F%E8%A1%A8%E7%A4%BA%EF%BC%9F\"><span class=\"toc-text\">IEEE754短浮点数格式表示？</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BE%8B%E9%A2%98\"><span class=\"toc-text\">例题</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#IEEE754%E8%BD%AC%E4%B8%BA%E5%8D%81%E8%BF%9B%E5%88%B6%E7%9C%9F%E5%80%BC\"><span class=\"toc-text\">IEEE754转为十进制真值</span></a></li></ol></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%AC%AC%E4%B8%89%E7%AB%A0-%E4%B8%AD%E5%A4%AE%E5%A4%84%E7%90%86%E5%99%A8\"><span class=\"toc-text\">第三章 中央处理器</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9F%BA%E6%9C%AC%E6%A6%82%E7%8E%87%E5%8F%8A%E5%BA%94%E7%94%A8\"><span class=\"toc-text\">基本概率及应用</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#CPU%E5%86%85%E9%83%A8%E5%90%84%E5%AF%84%E5%AD%98%E5%99%A8%E7%9A%84%E5%8A%9F%E8%83%BD%EF%BC%9F\"><span class=\"toc-text\">CPU内部各寄存器的功能？</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E9%80%9A%E7%94%A8%E5%AF%84%E5%AD%98%E5%99%A8%E7%BB%84\"><span class=\"toc-text\">通用寄存器组</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%9A%82%E5%AD%98%E5%99%A8\"><span class=\"toc-text\">暂存器</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%8C%87%E4%BB%A4%E5%AF%84%E5%AD%98%E5%99%A8IR\"><span class=\"toc-text\">指令寄存器IR</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%A8%8B%E5%BA%8F%E8%AE%A1%E6%95%B0%E5%99%A8PC\"><span class=\"toc-text\">程序计数器PC</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%A8%8B%E5%BA%8F%E7%8A%B6%E6%80%81%E5%AD%97%E5%AF%84%E5%AD%98%E5%99%A8PSW%EF%BC%88Program-Status-Word%EF%BC%89\"><span class=\"toc-text\">程序状态字寄存器PSW（Program Status Word）</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%9C%B0%E5%9D%80%E5%AF%84%E5%AD%98%E5%99%A8MAR\"><span class=\"toc-text\">地址寄存器MAR</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%95%B0%E6%8D%AE%E5%AF%84%E5%AD%98%E5%99%A8MBR%EF%BC%88MDR%EF%BC%89\"><span class=\"toc-text\">数据寄存器MBR（MDR）</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%95%B0%E6%8D%AE%E9%80%9A%E8%B7%AF%E7%BB%93%E6%9E%84%EF%BC%9F\"><span class=\"toc-text\">数据通路结构？</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BD%95%E8%B0%93%E5%90%8C%E6%AD%A5%E6%8E%A7%E5%88%B6%E6%96%B9%E5%BC%8F%EF%BC%8C%E4%BD%95%E8%B0%93%E5%BC%82%E6%AD%A5%E6%8E%A7%E5%88%B6%EF%BC%9F%E6%9C%89%E4%BD%95%E4%B8%BB%E8%A6%81%E7%89%B9%E5%BE%81%EF%BC%9F%E5%BA%94%E7%94%A8%E5%9C%BA%E5%90%88%EF%BC%9F\"><span class=\"toc-text\">何谓同步控制方式，何谓异步控制？有何主要特征？应用场合？</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%90%8C%E6%AD%A5%E6%8E%A7%E5%88%B6\"><span class=\"toc-text\">同步控制</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%BC%82%E6%AD%A5%E6%8E%A7%E5%88%B6\"><span class=\"toc-text\">异步控制</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BD%95%E8%B0%93%E4%B8%BB%E4%BB%8E%E8%AE%BE%E5%A4%87%EF%BC%8C%E8%AF%95%E4%B8%BE%E4%BE%8B%E8%AF%B4%E6%98%8E\"><span class=\"toc-text\">何谓主从设备，试举例说明</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%90%8C%E6%AD%A5%E6%8E%A7%E5%88%B6%E4%B8%AD%E5%A6%82%E4%BD%95%E5%BC%95%E5%85%A5%E5%BC%82%E6%AD%A5%E5%BA%94%E7%AD%94%E7%9A%84%EF%BC%8C%E8%AF%95%E4%B8%BE%E4%BE%8B%E8%AF%B4%E6%98%8E\"><span class=\"toc-text\">同步控制中如何引入异步应答的，试举例说明</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%BE%AE%E7%A8%8B%E5%BA%8F%E6%8E%A7%E5%88%B6%E6%80%9D%E6%83%B3%E7%9A%84%E5%9F%BA%E6%9C%AC%E8%A6%81%E7%82%B9%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F\"><span class=\"toc-text\">微程序控制思想的基本要点是什么？</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%88%A4%E6%96%AD%E4%B8%8B%E9%9D%A2%E5%8F%99%E8%BF%B0%E6%98%AF%E5%90%A6%E6%AD%A3%E7%A1%AE%EF%BC%8C%E8%AF%B4%E6%98%8E%E7%90%86%E7%94%B1%EF%BC%9A%E4%B8%B2%E8%A1%8C%E5%8A%A0%E6%B3%95%E5%99%A8%E4%B8%AD%E7%9A%84%E8%BF%9B%E4%BD%8D%E9%93%BE%E6%98%AF%E4%B8%B2%E8%A1%8C%E8%BF%9B%E4%BD%8D%E9%93%BE%EF%BC%8C%E5%B9%B6%E8%A1%8C%E5%8A%A0%E6%B3%95%E5%99%A8%E4%B8%AD%E7%9A%84%E8%BF%9B%E4%BD%8D%E9%93%BE%E5%8F%AA%E6%9C%89%E5%B9%B6%E8%A1%8C%E8%BF%9B%E4%BD%8D%E9%93%BE%E3%80%82\"><span class=\"toc-text\">判断下面叙述是否正确，说明理由：串行加法器中的进位链是串行进位链，并行加法器中的进位链只有并行进位链。</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%B8%B8%E7%94%A8%E7%9A%84%E5%8A%A0%E6%B3%95%E5%99%A8%E8%BF%9B%E4%BD%8D%E9%93%BE%E7%BB%93%E6%9E%84%E6%9C%89%E5%93%AA%E5%87%A0%E7%A7%8D%EF%BC%9F\"><span class=\"toc-text\">常用的加法器进位链结构有哪几种？</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%BB%84%E5%90%88%E9%80%BB%E8%BE%91%E6%8E%A7%E5%88%B6%E5%99%A8%E3%80%81%E5%BE%AE%E7%A8%8B%E5%BA%8F%E6%8E%A7%E5%88%B6%E5%99%A8%E6%9C%89%E4%BD%95%E5%8C%BA%E5%88%AB%EF%BC%9F\"><span class=\"toc-text\">组合逻辑控制器、微程序控制器有何区别？</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%BB%84%E5%90%88%E9%80%BB%E8%BE%91%E6%8E%A7%E5%88%B6%E5%99%A8%E3%80%81%E5%BE%AE%E7%A8%8B%E5%BA%8F%E6%8E%A7%E5%88%B6%E5%99%A8%E7%9A%84%E6%97%B6%E5%BA%8F%E7%B3%BB%E7%BB%9F%E6%98%AF%E5%A6%82%E4%BD%95%E5%88%92%E5%88%86%E7%9A%84%EF%BC%9F\"><span class=\"toc-text\">组合逻辑控制器、微程序控制器的时序系统是如何划分的？</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%BE%AE%E5%91%BD%E4%BB%A4%E3%80%81%E5%BE%AE%E6%93%8D%E4%BD%9C%E3%80%81%E5%BE%AE%E6%8C%87%E4%BB%A4%E3%80%81%E5%BE%AE%E6%8C%87%E4%BB%A4%E5%91%A8%E6%9C%9F%E3%80%81%E5%BE%AE%E7%A8%8B%E5%BA%8F%EF%BC%9F\"><span class=\"toc-text\">微命令、微操作、微指令、微指令周期、微程序？</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1%E4%BD%8D%E5%85%A8%E5%8A%A0%E5%99%A8%E7%9A%84%E7%BB%93%E6%9E%84%E5%8F%8A%E5%85%B3%E7%B3%BB%E8%A1%A8%E8%BE%BE%E5%BC%8F%E3%80%82\"><span class=\"toc-text\">1位全加器的结构及关系表达式。</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%97%B6%E5%BA%8F%E4%BF%A1%E5%8F%B7%EF%BC%9F%E6%97%B6%E5%BA%8F%E7%B3%BB%E7%BB%9F%EF%BC%9F\"><span class=\"toc-text\">时序信号？时序系统？</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%AE%A1%E7%AE%97%E9%A2%98-1\"><span class=\"toc-text\">计算题</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%B9%B6%E8%A1%8C%E5%8A%A0%E6%B3%95%E5%99%A8%E4%B8%AD%E7%9A%84%E4%B8%B2%E8%A1%8C%E8%BF%9B%E4%BD%8D%E9%93%BE%E7%BB%93%E6%9E%84%EF%BC%9A-C-n-G-n-P-nC-n-1\"><span class=\"toc-text\">并行加法器中的串行进位链结构：$C_n &#x3D; G_n + P_nC_{n-1}$</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%B9%B6%E8%A1%8C%E8%BF%9B%E4%BD%8D%E9%93%BE%E7%BB%93%E6%9E%84%EF%BC%9A-C-n-G-n-P-nG-n-1-%E2%80%A6-P-n%E2%80%A6P-1C-0\"><span class=\"toc-text\">并行进位链结构：$C_n &#x3D; G_n + P_nG_{n-1}+ … + P_n…P_1C_0$</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8E%9F%E7%A0%81%E4%B8%80%E4%BD%8D%E4%B9%98%E6%B3%95%EF%BC%88%E8%A6%81%E6%B1%82%E8%BF%90%E7%AE%97%E8%BF%87%E7%A8%8B%EF%BC%89\"><span class=\"toc-text\">原码一位乘法（要求运算过程）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%BF%90%E7%AE%97%E8%A7%84%E5%88%99\"><span class=\"toc-text\">运算规则</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%AE%BE%E8%AE%A1%E9%A2%98\"><span class=\"toc-text\">设计题</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#CPU%E7%9A%84%E9%80%BB%E8%BE%91%E7%BB%84%E6%88%90%EF%BC%88%E6%A8%A1%E5%9E%8B%E6%9C%BA%E6%A1%86%E5%9B%BE%EF%BC%89\"><span class=\"toc-text\">CPU的逻辑组成（模型机框图）</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#CPU%E7%9A%84%E6%8C%87%E4%BB%A4%E6%B5%81%E7%A8%8B\"><span class=\"toc-text\">CPU的指令流程</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%93%8D%E4%BD%9C%E6%97%B6%E9%97%B4%E8%A1%A8%E7%9A%84%E5%AE%89%E6%8E%92%EF%BC%88%E5%BE%AE%E5%91%BD%E4%BB%A4%E7%9A%84%E5%AE%89%E6%8E%92%EF%BC%89%EF%BC%9A\"><span class=\"toc-text\">操作时间表的安排（微命令的安排）：</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#R\"><span class=\"toc-text\">(R)</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#R-1\"><span class=\"toc-text\">-(R)</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#R-2\"><span class=\"toc-text\">(R)+</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#R-3\"><span class=\"toc-text\">@(R)+</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#X-R\"><span class=\"toc-text\">X(R)</span></a></li></ol></li></ol></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%AC%AC%E5%9B%9B%E7%AB%A0-%E5%AD%98%E5%82%A8%E5%AD%90%E7%B3%BB%E7%BB%9F\"><span class=\"toc-text\">第四章 存储子系统</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5%E5%8F%8A%E5%BA%94%E7%94%A8-2\"><span class=\"toc-text\">基本概念及应用</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%BB%E5%AD%98%E3%80%81%E7%BC%93%E5%AD%98%E3%80%81%E5%A4%96%E5%AD%98%EF%BC%9F\"><span class=\"toc-text\">主存、缓存、外存？</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%B8%BB%E5%AD%98%E5%82%A8%E5%99%A8\"><span class=\"toc-text\">主存储器</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%A4%96%E5%AD%98%E5%82%A8%E5%99%A8\"><span class=\"toc-text\">外存储器</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E9%AB%98%E9%80%9F%E7%BC%93%E5%AD%98%EF%BC%88Cache%EF%BC%89\"><span class=\"toc-text\">高速缓存（Cache）</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%AB%98%E9%80%9F%E7%BC%93%E5%AD%98Cache%E7%94%A8%E6%9D%A5%E5%AD%98%E6%94%BE%E4%BB%80%E4%B9%88%E5%86%85%E5%AE%B9%EF%BC%9F%E8%AE%BE%E7%BD%AE%E5%AE%83%E7%9A%84%E4%B8%BB%E8%A6%81%E7%9B%AE%E7%9A%84%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F\"><span class=\"toc-text\">高速缓存Cache用来存放什么内容？设置它的主要目的是什么？</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AD%98%E5%82%A8%E4%BB%8B%E8%B4%A8%EF%BC%9F\"><span class=\"toc-text\">存储介质？</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BD%95%E8%B0%93%E9%9A%8F%E6%9C%BA%E5%AD%98%E5%8F%96%EF%BC%9F%E4%BD%95%E8%B0%93%E9%A1%BA%E5%BA%8F%E5%AD%98%E5%8F%96%EF%BC%9F%E4%BD%95%E8%B0%93%E7%9B%B4%E6%8E%A5%E5%AD%98%E5%8F%96%EF%BC%9F%E8%AF%B7%E5%90%84%E8%AF%95%E4%B8%BE%E4%B8%80%E4%BE%8B%E3%80%82\"><span class=\"toc-text\">何谓随机存取？何谓顺序存取？何谓直接存取？请各试举一例。</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E9%9A%8F%E6%9C%BA%E5%AD%98%E5%8F%96%EF%BC%88RAM%EF%BC%89\"><span class=\"toc-text\">随机存取（RAM）</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E9%A1%BA%E5%BA%8F%E5%AD%98%E5%8F%96%EF%BC%88SAM%EF%BC%89\"><span class=\"toc-text\">顺序存取（SAM）</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%9B%B4%E6%8E%A5%E5%AD%98%E5%8F%96%EF%BC%88DAM%EF%BC%89\"><span class=\"toc-text\">直接存取（DAM）</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%9D%99%E6%80%81%E5%AD%98%E5%82%A8%E5%99%A8SRAM%E3%80%81%E5%8A%A8%E6%80%81%E5%AD%98%E5%82%A8%E5%99%A8DRAM%E5%AD%98%E5%82%A8%E5%8E%9F%E7%90%86%EF%BC%9F\"><span class=\"toc-text\">静态存储器SRAM、动态存储器DRAM存储原理？</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8A%A8%E6%80%81%E5%88%B7%E6%96%B0%E5%88%86%E4%B8%BA%E5%93%AA%E5%87%A0%E7%A7%8D%E6%83%85%E5%86%B5%EF%BC%8C%E5%90%84%E6%9C%89%E4%BB%80%E4%B9%88%E7%89%B9%E7%82%B9%EF%BC%9F\"><span class=\"toc-text\">动态刷新分为哪几种情况，各有什么特点？</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%88%B7%E6%96%B0%E3%80%81%E9%87%8D%E5%86%99%E7%9A%84%E5%8C%BA%E5%88%AB%EF%BC%9F\"><span class=\"toc-text\">刷新、重写的区别？</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%85%A8%E5%9C%B0%E5%9D%80%E8%AF%91%E7%A0%81%E6%96%B9%E5%BC%8F%EF%BC%9F%E9%83%A8%E5%88%86%E5%9C%B0%E5%9D%80%E8%AF%91%E7%A0%81%E6%96%B9%E5%BC%8F%EF%BC%9F\"><span class=\"toc-text\">全地址译码方式？部分地址译码方式？</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%85%A8%E5%9C%B0%E5%9D%80%E7%A7%BB%E7%A0%81%E6%96%B9%E5%BC%8F\"><span class=\"toc-text\">全地址移码方式</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E9%83%A8%E5%88%86%E5%9C%B0%E5%9D%80%E8%AF%91%E7%A0%81\"><span class=\"toc-text\">部分地址译码</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%AE%BE%E8%AE%A1%E9%A2%98-1\"><span class=\"toc-text\">设计题</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%AC%AC%E4%BA%94%E7%AB%A0-I-O%E7%B3%BB%E7%BB%9F\"><span class=\"toc-text\">第五章 I&#x2F;O系统</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5%E5%8F%8A%E5%BA%94%E7%94%A8-3\"><span class=\"toc-text\">基本概念及应用</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%B3%BB%E7%BB%9F%E6%80%BB%E7%BA%BF%E4%B8%8A%E4%B8%80%E8%88%AC%E5%8C%85%E5%90%AB%E5%93%AA%E4%B8%89%E7%BB%84%E4%BF%A1%E6%81%AF%EF%BC%9F\"><span class=\"toc-text\">系统总线上一般包含哪三组信息？</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%AD%E6%96%AD%E6%96%B9%E5%BC%8F%E5%AE%9A%E4%B9%89%E3%80%81%E5%AE%9E%E8%B4%A8%E3%80%81%E7%89%B9%E7%82%B9%EF%BC%9F\"><span class=\"toc-text\">中断方式定义、实质、特点？</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%AD%E6%96%AD%E5%90%91%E9%87%8F%E3%80%81%E4%B8%AD%E6%96%AD%E5%90%91%E9%87%8F%E8%A1%A8%E3%80%81%E5%90%91%E9%87%8F%E5%9C%B0%E5%9D%80%EF%BC%9F\"><span class=\"toc-text\">中断向量、中断向量表、向量地址？</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BD%95%E8%B0%93%E5%90%91%E9%87%8F%E4%B8%AD%E6%96%AD%EF%BC%9F%E4%BD%95%E8%B0%93%E9%9D%9E%E5%90%91%E9%87%8F%E4%B8%AD%E6%96%AD%EF%BC%9F%E5%90%84%E6%9C%89%E4%BD%95%E4%BC%98%E7%82%B9%E5%92%8C%E7%BC%BA%E7%82%B9%EF%BC%9F\"><span class=\"toc-text\">何谓向量中断？何谓非向量中断？各有何优点和缺点？</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8D%95%E7%BA%A7%E4%B8%AD%E6%96%AD%E3%80%81%E5%A4%9A%E9%87%8D%E4%B8%AD%E6%96%AD%EF%BC%9F\"><span class=\"toc-text\">单级中断、多重中断？</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%AD%E6%96%AD%E6%8E%A7%E5%88%B6%E5%99%A88259A%E7%9A%84%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86%EF%BC%9F\"><span class=\"toc-text\">中断控制器8259A的工作原理？</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%BD%AC%E5%AD%90%E4%B8%8E%E4%B8%AD%E6%96%AD%E8%B0%83%E7%94%A8%E7%9A%84%E7%9B%B8%E4%BC%BC%E3%80%81%E5%8C%BA%E5%88%AB%EF%BC%9F\"><span class=\"toc-text\">转子与中断调用的相似、区别？</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#DMA%E6%96%B9%E5%BC%8F%E5%AE%9A%E4%B9%89%E3%80%81%E5%AE%9E%E8%B4%A8%E3%80%81%E7%89%B9%E7%82%B9%EF%BC%9F\"><span class=\"toc-text\">DMA方式定义、实质、特点？</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%A8%8B%E5%BA%8F%E7%9B%B4%E4%BC%A0%E6%96%B9%E5%BC%8F%EF%BC%8C%E4%B8%AD%E6%96%AD%E6%96%B9%E5%BC%8F%EF%BC%8CDMA%E6%96%B9%E5%BC%8F%E4%B9%8B%E9%97%B4%E7%9A%84%E5%8C%BA%E5%88%AB%EF%BC%9F\"><span class=\"toc-text\">程序直传方式，中断方式，DMA方式之间的区别？</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%AE%A1%E7%AE%97%E9%A2%98-2\"><span class=\"toc-text\">计算题</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%9C%A88259A%E4%B8%AD%EF%BC%8C%E5%A6%82%E4%BD%95%E9%80%9A%E8%BF%87IRR%E3%80%81IMR%E3%80%81ISR%E7%9A%84%E5%80%BC%EF%BC%8C%E5%88%A4%E6%96%AD%E4%B8%AD%E6%96%AD%E6%8E%A5%E5%8F%A3%E6%98%AF%E5%90%A6%E5%90%91CPU%E5%8F%91INT%E4%BF%A1%E5%8F%B7%E3%80%82\"><span class=\"toc-text\">在8259A中，如何通过IRR、IMR、ISR的值，判断中断接口是否向CPU发INT信号。</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%A6%82%E4%BD%95%E6%A0%B9%E6%8D%AE%E4%B8%AD%E6%96%AD%E7%B1%BB%E5%9E%8B%E7%A0%81%EF%BC%88%E6%88%96%E4%B8%AD%E6%96%AD%E5%8F%B7%EF%BC%89%E7%94%9F%E6%88%90%E5%90%91%E9%87%8F%E5%9C%B0%E5%9D%80%E3%80%82\"><span class=\"toc-text\">如何根据中断类型码（或中断号）生成向量地址。</span></a></li></ol></li></ol></li></ol>","author":{"name":"C4IN","slug":"blog-author","avatar":"/pic/au.jpg","link":"/","description":"这里是破酥的个人博客","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"概率论公式整理-3","uid":"879a8462604fcb11b1eac81677e70525","slug":"概率论公式整理-3","date":"2023-12-27T03:48:56.000Z","updated":"2024-01-15T02:39:09.733Z","comments":true,"path":"api/articles/概率论公式整理-3.json","keywords":null,"cover":null,"text":"🚗第七章 参数估计参数估计是对已知分布类型的总体，利用样本对其未知参数作出估计 参数的点估计设总体$X $的分布函数$F( x ;θ )$类型已知，$ θ $是...","permalink":"/post/概率论公式整理-3","photos":[],"count_time":{"symbolsCount":"22k","symbolsTime":"20 mins."},"categories":[],"tags":[{"name":"概率论","slug":"概率论","count":1,"path":"api/tags/概率论.json"}],"author":{"name":"C4IN","slug":"blog-author","avatar":"/pic/au.jpg","link":"/","description":"这里是破酥的个人博客","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"概率论公式整理-2","uid":"231c4a8897ba629b993d7680d474099c","slug":"概率论公式整理-2","date":"2023-12-22T04:28:29.000Z","updated":"2024-01-15T02:39:09.726Z","comments":true,"path":"api/articles/概率论公式整理-2.json","keywords":null,"cover":[],"text":"🎈第四章 随机变量的数字特征数学期望设$ X $是离散型随机变量,其分布律为 $P\\left\\{X=x_{i}\\right\\}=p_{i}, \\quad i=1...","permalink":"/post/概率论公式整理-2","photos":[],"count_time":{"symbolsCount":"16k","symbolsTime":"15 mins."},"categories":[],"tags":[{"name":"概率论与数理统计","slug":"概率论与数理统计","count":2,"path":"api/tags/概率论与数理统计.json"}],"author":{"name":"C4IN","slug":"blog-author","avatar":"/pic/au.jpg","link":"/","description":"这里是破酥的个人博客","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}